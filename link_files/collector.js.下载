var __logs_panel = document.getElementById('logs_panel');
var __log = function (msg, params) {
    params ? (console.log(msg, params), msg = msg + ',' + JSON.stringify(params)) : console.log(msg);

    __logs_panel && (__logs_panel.innerHTML += msg + '<br/>');
};

var _jz_util = {
    ajax: function (opt) {
        opt = opt || {};
        opt.method = opt.method.toUpperCase() || 'POST';
        opt.url = opt.url || '';
        opt.async = opt.async || true;
        opt.data = opt.data || null;
        opt.success = opt.success || function () { };
        var xmlHttp = null;
        if (XMLHttpRequest) {
            xmlHttp = new XMLHttpRequest();
        }
        else {
            xmlHttp = new ActiveXObject('Microsoft.XMLHTTP');
        } var params = [];
        for (var key in opt.data) {
            params.push(key + '=' + opt.data[key]);
        }
        var postData = params.join('&');
        if (opt.method.toUpperCase() === 'POST') {
            xmlHttp.open(opt.method, opt.url, opt.async);
            xmlHttp.setRequestHeader("Accept", "*/*");
            xmlHttp.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded;charset=utf-8');
            xmlHttp.send(postData);
        }
        else if (opt.method.toUpperCase() === 'GET') {
            xmlHttp.open(opt.method, opt.url + '?' + postData, opt.async);
            xmlHttp.send(null);
        }
        xmlHttp.onreadystatechange = function () {
            if (xmlHttp.readyState == 4 && xmlHttp.status == 200) {
                __log('ajax completed.');
                opt.success(xmlHttp.responseText);
            }
        };
    },
    setCookie: function (name, value) {
        var Days = 30;
        var exp = new Date();
        exp.setTime(exp.getTime() + Days * 86400000);
        document.cookie = name + "=" + escape(value) + ";expires=" + exp.toGMTString();
    },
    getCookie: function (name) {
        var arr, reg = new RegExp("(^| )" + name + "=([^;]*)(;|$)");
        if (arr = document.cookie.match(reg))
            return unescape(arr[2]);
        else
            return null;
    },
    /*数组去重*/
    uniq: function (array) {
        var temp = [];
        var index = [];
        var l = array.length;
        for (var i = 0; i < l; i++) {
            for (var j = i + 1; j < l; j++) {
                if (array[i] === array[j]) {
                    i++;
                    j = i;
                }
            }
            temp.push(array[i]);
            index.push(i);
        }
        return temp;
    },
    filter: function (t) {
        return t = t.replace(/\&/g, "%26"),
            t = t.replace(/\+/g, "%2B"),
            t;
    }
};

function jz_collector_report(zw_data) {

    /** cookie标志 */
    var jz_col_cookie_check_flag = '___collector20250704';
    /** 是否为调试模式 */
    var isDebug = false;

    /**百度需要的相关信息 */
    var _bd = {
        /*字体支持*/
        support_fonts: function () {
            function e() {
                var a = document.createElement("span");
                return a.style.position = "absolute", a.style.left = "-9999px", a.style.fontSize = T, a.style.lineHeight = "normal", a.innerHTML = d, c.appendChild(a),
                    a;
            }
            /**初始化参照字体宽高 */
            function i() {
                for (var a, e = 0, i = l.length; e < i; e++)
                    a = l[e], r.style.fontFamily = a, s[a] = r.offsetWidth, B[a] = r.offsetHeight
            }
            /*目标字体与参照字体对比(与参照字体其中一个字体的宽或高不同就表示支持该目标字体)*/
            function n(a) {
                for (var e = 0, i = l.length; e < i; e++) {
                    var n = l[e];
                    if (r.style.fontFamily = '"' + a + '",' + n,
                        r.offsetWidth !== s[n] || r.offsetHeight !== B[n])
                        return void S.push(a)
                }
            }
            function o(resolve) {
                var a = 0,
                    e = u.length;
                !function () {
                    var i = u[a],
                        o = arguments.callee;
                    n(i), setTimeout(function () {
                        a++, a < e ? o() : (resolve(S), c.removeChild(r))
                    }, 0)
                }()
            }
            var r,
                l = ["monospace", "sans-serif", "serif"],//参照字体
                d = "mmmmmmmmmmlli",
                T = "72px",
                s = {},//参照字体宽
                B = {},//参照字体高
                S = [],//支持的字体
                c = document.getElementsByTagName("body")[0],
                /*检测目标字体*/
                u = ['Andale Mono', 'Arial', 'Arial Black', 'Arial Hebrew', 'Arial MT', 'Arial Narrow', 'Arial Rounded MT Bold',
                    'Arial Unicode MS', 'Bitstream Vera Sans Mono', 'Book Antiqua', 'Bookman Old Style', 'Calibri', 'Cambria',
                    'Cambria Math', 'Century', 'Century Gothic', 'Century Schoolbook', 'Comic Sans', 'Comic Sans MS', 'Consolas',
                    'Courier', 'Courier New', 'Garamond', 'Geneva', 'Georgia', 'Helvetica', 'Helvetica Neue', 'Impact', 'Lucida Bright',
                    'Lucida Calligraphy', 'Lucida Console', 'Lucida Fax', 'LUCIDA GRANDE', 'Lucida Handwriting', 'Lucida Sans',
                    'Lucida Sans Typewriter', 'Lucida Sans Unicode', 'Microsoft Sans Serif', 'Monaco', 'Monotype Corsiva',
                    'MS Gothic', 'MS Outlook', 'MS PGothic', 'MS Reference Sans Serif', 'MS Sans Serif', 'MS Serif', 'MYRIAD',
                    'MYRIAD PRO', 'Palatino', 'Palatino Linotype', 'Segoe Print', 'Segoe Script', 'Segoe UI', 'Segoe UI Light',
                    'Segoe UI Semibold', 'Segoe UI Symbol', 'Tahoma', 'Times', 'Times New Roman', 'Times New Roman PS',
                    'Trebuchet MS', 'Verdana', 'Wingdings', 'Wingdings 2', 'Wingdings 3', 'Abadi MT Condensed Light',
                    'Academy Engraved LET', 'ADOBE CASLON PRO', 'Adobe Garamond', 'ADOBE GARAMOND PRO',
                    'Agency FB', 'Aharoni', 'Albertus Extra Bold', 'Albertus Medium', 'Algerian', 'Amazone BT', 'American Typewriter Condensed', 'AmerType Md BT', 'Andalus', 'Angsana New', 'AngsanaUPC', 'Antique Olive', 'Aparajita', 'Apple Chancery', 'Apple Color Emoji', 'Apple SD Gothic Neo', 'Arabic Typesetting', 'ARCHER', 'ARNO PRO', 'Arrus BT', 'Aurora Cn BT', 'AvantGarde Bk BT', 'AvantGarde Md BT', 'AVENIR', 'Ayuthaya', 'Bandy', 'Bangla Sangam MN', 'Bank Gothic', 'BankGothic Md BT', 'Baskerville', 'Baskerville Old Face', 'Batang', 'BatangChe', 'Bauer Bodoni', 'Bauhaus 93', 'Bazooka', 'Bell MT', 'Bembo', 'Benguiat Bk BT', 'Berlin Sans FB', 'Berlin Sans FB Demi', 'Bernard MT Condensed', 'BernhardFashion BT', 'BernhardMod BT', 'Big Caslon', 'BinnerD', 'Blackadder ITC', 'BlairMdITC TT', 'Bodoni 72', 'Bodoni 72 Oldstyle', 'Bodoni 72 Smallcaps', 'Bodoni MT', 'Bodoni MT Black', 'Bodoni MT Condensed', 'Bodoni MT Poster Compressed', 'Bookshelf Symbol 7', 'Boulder', 'Bradley Hand', 'Bradley Hand ITC', 'Bremen Bd BT', 'Britannic Bold', 'Broadway', 'Browallia New', 'Brush Script MT', 'Californian FB', 'Calisto MT', 'Calligrapher', 'Candara', 'CaslonOpnface BT', 'Castellar', 'Centaur', 'Cezanne', 'CG Omega', 'CG Times', 'Chalkboard', 'Chalkboard SE', 'Chalkduster', 'Charlesworth', 'Charter Bd BT', 'Charter BT', 'Chaucer', 'ChelthmITC Bk BT', 'Chiller', 'Clarendon', 'Clarendon Condensed', 'CloisterBlack BT', 'Cochin', 'Colonna MT', 'Constantia', 'Cooper Black', 'Copperplate', 'Copperplate Gothic', 'Copperplate Gothic Bold', 'Copperplate Gothic Light', 'CopperplGoth Bd BT', 'Corbel', 'Eras Bold ITC', 'Cornerstone', 'Coronet', 'Cuckoo', 'Curlz MT', 'DaunPenh', 'Dauphin', 'David', 'DB LCD Temp', 'DELICIOUS', 'Denmark', 'DFKai-SB', 'Didot', 'DilleniaUPC', 'DIN', 'DokChampa', 'Dotum', 'DotumChe', 'Ebrima', 'FrankRuehl', 'Edwardian Script ITC', 'Elephant', 'English 111 Vivace BT', 'Engravers MT', 'EngraversGothic BT', 'Eras Demi ITC', 'Eras Light ITC', 'Eras Medium ITC', 'EucrosiaUPC', 'Euphemia', 'Euphemia UCAS', 'EUROSTILE', 'Exotc350 Bd BT', 'FangSong', 'Felix Titling', 'Fixedsys', 'FONTIN', 'Footlight MT Light', 'Forte', 'Fransiscan', 'Freefrm721 Blk BT', 'FreesiaUPC', 'Freestyle Script', 'French Script MT', 'FrnkGothITC Bk BT', 'Fruitger', 'FRUTIGER', 'Futura', 'Futura Bk BT', 'Futura Lt BT', 'Futura Md BT', 'Futura ZBlk BT', 'FuturaBlack BT', 'Gabriola', 'Galliard BT', 'Gautami', 'Geeza Pro', 'Geometr231 BT', 'Geometr231 Hv BT', 'Geometr231 Lt BT', 'GeoSlab 703 Lt BT', 'GeoSlab 703 XBd BT', 'Gigi', 'Gill Sans', 'Gill Sans MT', 'GulimChe', 'Gill Sans MT Condensed', 'Gill Sans MT Ext Condensed Bold', 'Gill Sans Ultra Bold', 'BrowalliaUPC', 'Gill Sans Ultra Bold Condensed', 'Gisha', 'Gloucester MT Extra Condensed', 'GOTHAM', 'GOTHAM BOLD', 'Goudy Old Style', 'Goudy Stout', 'GoudyHandtooled BT', 'GoudyOLSt BT', 'Gujarati Sangam MN', 'Gulim', 'Gungsuh', 'GungsuhChe', 'Gurmukhi MN', 'Haettenschweiler', 'Harlow Solid Italic', 'Harrington', 'Heather', 'Heiti SC', 'Heiti TC', 'HELV', 'Herald', 'High Tower Text', 'Hiragino Kaku Gothic ProN', 'Incised901 Bd BT', 'Hoefler Text', 'Humanst 521 Cn BT', 'Humanst521 BT', 'Humanst521 Lt BT', 'Imprint MT Shadow', 'Pegasus', 'Incised901 BT', 'Incised901 Lt BT', 'INCONSOLATA', 'Informal Roman', 'Informal011 BT', 'INTERSTATE', 'IrisUPC', 'Iskoola Pota', 'JasmineUPC', 'Jazz LET', 'Jenson', 'Jester', 'Jokerman', 'Juice ITC', 'Kabel Bk BT', 'Kabel Ult BT', 'Kailasa', 'KaiTi', 'Kalinga', 'Kannada Sangam MN', 'Kartika', 'Kaufmann Bd BT', 'Kaufmann BT', 'Khmer UI', 'KodchiangUPC', 'Kokila', 'Korinna BT', 'Kristen ITC', 'Krungthep', 'Kunstler Script', 'Lao UI', 'Latha', 'Leelawadee', 'Letter Gothic', 'Levenim MT', 'LilyUPC', 'Lithograph',
                    'Lithograph Light', 'Lydian BT', 'Magneto', 'Maiandra GD', 'Malayalam Sangam MN', 'Malgun Gothic', 'Mangal', 'Marigold', 'Marion', 'Marker Felt', 'Market', 'Marlett', 'Matisse ITC', 'Matura MT Script Capitals', 'Meiryo', 'Meiryo UI', 'Microsoft Himalaya', 'Microsoft JhengHei', 'Microsoft New Tai Lue', 'Microsoft PhagsPa', 'Microsoft Tai Le', 'Microsoft Uighur', 'Microsoft YaHei', 'Microsoft Yi Baiti', 'MingLiU', 'MingLiU_HKSCS', 'MingLiU_HKSCS-ExtB', 'MingLiU-ExtB', 'Minion', 'Minion Pro', 'Miriam', 'Miriam Fixed', 'Mistral', 'Modern', 'Modern No. 20', 'Mona Lisa Solid ITC TT', 'Mongolian Baiti', 'MONO', 'MoolBoran', 'Mrs Eaves', 'MS LineDraw', 'MS Mincho', 'MS PMincho', 'MS Reference Specialty', 'MS UI Gothic', 'MT Extra', 'MUSEO', 'MV Boli', 'Nadeem', 'Narkisim', 'NEVIS', 'News Gothic', 'News GothicMT', 'NewsGoth BT', 'Niagara Engraved', 'Niagara Solid', 'Noteworthy', 'NSimSun', 'Nyala', 'OCR A Extended', 'Old Century', 'Old English Text MT', 'Onyx', 'Onyx BT', 'OPTIMA', 'Oriya Sangam MN', 'OSAKA', 'OzHandicraft BT', 'Palace Script MT', 'Papyrus', 'Parchment', 'Party LET', 'Perpetua', 'Perpetua Titling MT', 'PetitaBold', 'Pickwick', 'Plantagenet Cherokee', 'Playbill', 'PMingLiU', 'PMingLiU-ExtB', 'Poor Richard', 'Poster', 'PosterBodoni BT', 'PRINCETOWN LET', 'Pristina', 'PTBarnum BT', 'Pythagoras', 'Raavi', 'Rage Italic', 'Ravie', 'Ribbon131 Bd BT', 'Rockwell', 'Rockwell Condensed', 'Rockwell Extra Bold', 'Rod', 'Roman', 'Sakkal Majalla', 'Santa Fe LET', 'Savoye LET', 'Sceptre', 'Script', 'Script MT Bold', 'SCRIPTINA', 'Serifa', 'Serifa BT', 'Serifa Th BT', 'ShelleyVolante BT', 'Sherwood', 'Shonar Bangla', 'Showcard Gothic', 'Shruti', 'Signboard', 'SILKSCREEN', 'SimHei', 'Simplified Arabic', 'Simplified Arabic Fixed', 'SimSun', 'SimSun-ExtB', 'Sinhala Sangam MN', 'Sketch Rockwell', 'Skia', 'Snap ITC', 'Snell Roundhand', 'Socket', 'Souvenir Lt BT', 'Staccato222 BT', 'Steamer', 'Stencil', 'Storybook', 'Styllo', 'Subway', 'Swis721 BlkEx BT', 'Swiss911 XCm BT', 'Sylfaen', 'Synchro LET', 'System', 'Technical', 'Teletype', 'Telugu Sangam MN', 'Tempus Sans ITC', 'Terminal', 'Thonburi', 'Traditional Arabic', 'Trajan', 'TRAJAN PRO', 'Tristan', 'Tubular', 'Tunga', 'Tw Cen MT', 'Tw Cen MT Condensed', 'Long Island', 'Tw Cen MT Condensed Extra Bold', 'TypoUpright BT', 'Unicorn', 'Univers', 'Univers CE 55 Medium', 'Univers Condensed', 'Utsaah', 'Vagabond', 'Vani', 'Vijaya', 'Viner Hand ITC', 'VisualUI', 'Vivaldi', 'Vladimir Script', 'Vrinda', 'Westminster', 'WHITNEY', 'Wide Latin', 'ZapfEllipt BT', 'ZapfHumnst BT', 'ZapfHumnst Dm BT', 'Zapfino', 'Zurich BlkEx BT', 'Zurich Ex BT', 'ZWAdobeF', 'American Typewriter', 'Cordia New', 'CordiaUPC', 'Hiragino Mincho ProN', 'Small Fonts', 'Tamil Sangam MN', 'Adobe Fangsong Std', 'Adobe Hebrew', 'Adobe Ming Std', 'Arab', 'Bitstream Vera Serif', 'Braggadocio', 'Casual', 'DejaVu LGC Sans Mono', 'Desdemona', 'Eurostile', 'Franklin Gothic Heavy', 'GungSeo', 'Hiragino Sans GB', 'KacstOne', 'Kino MT', 'Kozuka Gothic Pr6N', 'Lohit Gujarati', 'Loma', 'Menlo', 'News Gothic MT', 'Rachana', 'Sawasdee', 'TlwgMono', 'Ubuntu', 'Umpush', 'Utopia', '4game', 'AdblockPlugin', 'AdobeExManCCDetect', 'AdobeExManDetect', 'Alawar NPAPI utils', 'Aliedit Plug-In', 'Alipay Security Control 3', 'AliSSOLogin plugin', 'AmazonMP3DownloaderPlugin', 'AOL Media Playback Plugin', 'AppUp', 'ArchiCAD', 'AVG SiteSafety plugin', 'Babylon ToolBar', 'Battlelog Game Launcher', 'BitCometAgent', 'Bitdefender QuickScan', 'BlueStacks Install Detector', 'CatalinaGroup Update', 'Citrix ICA Client', 'Citrix online plug-in', 'Citrix Receiver Plug-in', 'Coowon Update', 'DealPlyLive Update', 'Default Browser Helper', 'DivX Browser Plug-In', 'DivX Plus Web Player',
                    'DivX VOD Helper Plug-in', 'doubleTwist Web Plugin', 'Downloaders plugin', 'downloadUpdater', 'eMusicPlugin DLM6', 'ESN Launch Mozilla Plugin', 'ESN Sonar API', 'Exif Everywhere', 'Facebook Plugin', 'File Downloader Plug-in', 'FileLab plugin', 'FlyOrDie Games Plugin', 'Folx 3 Browser Plugin', 'FUZEShare', 'GDL Object Web Plug-in 16.00', 'GFACE Plugin', 'Ginger', 'Gnome Shell Integration', 'Google Earth Plugin', 'Google Earth Plug-in', 'Google Gears 0.5.33.0', 'Google Talk Effects Plugin', 'Google Update', 'Harmony Firefox Plugin', 'Harmony Plug-In', 'Heroes &amp; Generals live', 'HPDetect', 'Html5 location provider', 'IE Tab plugin', 'iGetterScriptablePlugin', 'iMesh plugin', 'Kaspersky Password Manager', 'LastPass', 'LogMeIn Plugin 1.0.0.935', 'LogMeIn Plugin 1.0.0.961', 'Ma-Config.com plugin', 'Microsoft Office 2013', 'MinibarPlugin', 'Native Client', 'Nitro PDF Plug-In', 'Nokia Suite Enabler Plugin', 'Norton Identity Safe', 'npAPI Plugin', 'NPLastPass', 'NPPlayerShell', 'npTongbuAddin', 'NyxLauncher', 'Octoshape Streaming Services', 'Online Storage plug-in', 'Orbit Downloader', 'Pando Web Plugin', 'Parom.TV player plugin', 'PDF integrado do WebKit', 'PDF-XChange Viewer', 'PhotoCenterPlugin1.1.2.2', 'Picasa', 'PlayOn Plug-in', 'QQ2013 Firefox Plugin', 'QQDownload Plugin', 'QQMiniDL Plugin', 'QQMusic', 'RealDownloader Plugin', 'Roblox Launcher Plugin', 'RockMelt Update', 'Safer Update', 'SafeSearch', 'Scripting.Dictionary', 'SefClient Plugin', 'Shell.UIHelper', 'Silverlight Plug-In', 'Simple Pass', 'Skype Web Plugin', 'SumatraPDF Browser Plugin',
                    'Symantec PKI Client', 'Tencent FTN plug-in', 'Thunder DapCtrl NPAPI Plugin', 'TorchHelper', 'Unity Player', 'Uplay PC', 'VDownloader', 'Veetle TV Core', 'VLC Multimedia Plugin', 'Web Components', 'WebKit-integrierte PDF', 'WEBZEN Browser Extension', 'Wolfram Mathematica', 'WordCaptureX', 'WPI Detector 1.4', 'Yandex Media Plugin', 'Yandex PDF Viewer', 'YouTube Plug-in', 'zako', 'LiSu', 'YouYuan', 'STXihei', 'STKaiti', 'STSong', 'STZhongsong', 'STFangsong', 'FZShuTi', 'FZYaoti', 'STCaiyun', 'STHupo', 'STLiti', 'STXingkai', 'STXinwei', 'STHeiti', 'LiHei Pro Medium', 'LiSong Pro Light', 'BiauKai', 'Apple LiGothic Medium', 'Apple LiSung Light'],
                r = e();
            return i(), new Promise(function (resolve, reject) {
                o(resolve);
            });
        },
        /*缩放信息*/
        zoom_info: function () {
            var n = function () {
                return window.devicePixelRatio || 1
            },
                t = function () {
                    return {
                        zoom: 1,
                        devicePxPerCssPx: 1
                    }
                },
                i = function () {
                    var e = Math.round(screen.deviceXDPI / screen.logicalXDPI * 100) / 100;
                    return {
                        zoom: e,
                        devicePxPerCssPx: e * n()
                    }
                },
                o = function () {
                    var e = Math.round(document.documentElement.offsetHeight / window.innerHeight * 100) / 100;
                    return {
                        zoom: e,
                        devicePxPerCssPx: e * n()
                    }
                },
                r = function () {
                    var e = Math.round(window.outerWidth / window.innerWidth * 100) / 100;
                    return {
                        zoom: e,
                        devicePxPerCssPx: e * n()
                    }
                },
                d = function () {
                    var e = Math.round(document.documentElement.clientWidth / window.innerWidth * 100) / 100;
                    return {
                        zoom: e,
                        devicePxPerCssPx: e * n()
                    }
                },
                a = function () {
                    var e = 90 == Math.abs(window.orientation) ? screen.height : screen.width,
                        t = e / window.innerWidth;
                    return {
                        zoom: t,
                        devicePxPerCssPx: t * n()
                    }
                },
                u = function () {
                    var e = function (e) {
                        return e.replace(/;/g, " !important;")
                    },
                        t = document.createElement("div");
                    t.innerHTML = "1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>0",
                        t.setAttribute("style", e("font: 100px/1em sans-serif; -webkit-text-size-adjust: none; text-size-adjust: none; height: auto; width: 1em; padding: 0; overflow: visible;"));
                    var i = document.createElement("div");
                    i.setAttribute("style", e("width:0; height:0; overflow:hidden; visibility:hidden; position: absolute;")), i.appendChild(t), document.body.appendChild(i);
                    var o = 1e3 / t.clientHeight;
                    return o = Math.round(100 * o) / 100, document.body.removeChild(i), {
                        zoom: o,
                        devicePxPerCssPx: o * n()
                    }
                },
                c = function () {
                    var e = h("min--moz-device-pixel-ratio", "", 0, 10, 20, 1e-4);
                    return e = Math.round(100 * e) / 100, {
                        zoom: e,
                        devicePxPerCssPx: e
                    }
                },
                s = function () {
                    return {
                        zoom: c().zoom,
                        devicePxPerCssPx: n()
                    }
                },
                m = function () {
                    var e = window.outerWidth / window.innerWidth;
                    return e = Math.round(100 * e) / 100, {
                        zoom: e,
                        devicePxPerCssPx: e * n()
                    }
                },
                h = function (e, n, t, i, o, r) {
                    function d(t, i, o) {
                        var u = (t + i) / 2;
                        return o <= 0 || i - t < r ? u : a("(" + e + ":" + u + n + ")").matches ? d(u, i, o - 1) : d(t, u, o - 1)
                    }
                    var a,
                        u,
                        c,
                        s
                        ;
                    window.matchMedia ? a = window.matchMedia : (u = document.getElementsByTagName("head")[0], c = document.createElement("style"), u.appendChild(c), s = document.createElement("div"), s.className = "mediaQueryBinarySearch", s.style.display = "none", document.body.appendChild(s), a = function (e) {
                        c.sheet.insertRule("@media " + e + "{.mediaQueryBinarySearch {text-decoration: underline} }", 0);
                        var n = "underline" == getComputedStyle(s, null).textDecoration;
                        return c.sheet.deleteRule(0), {
                            matches: n
                        }
                    });
                    var m = d(t, i, o)
                        ;
                    return s && (u.removeChild(c), document.body.removeChild(s)), m
                },
                l = function () {
                    var e = t
                        ;
                    return isNaN(screen.logicalXDPI) || isNaN(screen.systemXDPI) ? window.navigator.msMaxTouchPoints ? e = o : window.chrome && !(window.opera || navigator.userAgent.indexOf(" Opera") >= 0) ? e = r : Object.prototype.toString.call(window.HTMLElement).indexOf("Constructor") > 0 ? e = d : "orientation" in window && "webkitRequestAnimationFrame" in window ? e = a : "webkitRequestAnimationFrame" in window ? e = u : navigator.userAgent.indexOf("Opera") >= 0 ? e = m : window.devicePixelRatio ? e = s : c().zoom > .001 && (e = c) : e = i, e
                }();

            return {
                zoom: function () {
                    return l().zoom
                },
                device: function () {
                    return l().devicePxPerCssPx
                }
            }
        },
        /*H5支持信息*/
        h5_support_info: function () {
            /**script 动态创建 是否是否成功 */
            function n() {
                var n = document.createElement("script"),
                    e = new Promise(function (resolve, reject) {
                        n.type = "module", n.innerHTML = "window.__moduleScriptTestVariable__ = 1;", document.body.appendChild(n), setTimeout(function () {
                            resolve(!!window.__moduleScriptTestVariable__)
                        }, 300);
                    });
                return e
            }
            /*样式属性是否能赋值成功*/
            function o(e, n) {
                return v[e] = n, !(v[e] !== n)
            }
            function t() {
                return v.color = "#33333333", !!v.color
            }
            function r() {
                var e = document.createElement("meter");
                return e && "max" in e
            }
            function i() {
                var e = ["webkit", "moz", "ms", "o"];
                if ("hidden" in document)
                    return "hidden";
                for (var n = 0; n < e.length; n++) {
                    var o = e[n] + "Hidden";
                    if (o in document)
                        return o
                }
            }
            /*是否能创建svg和svg是否包含viewBox属性*/
            function c() {
                f.innerHTML = ['<svg version="1.1" xmlns="http://www.w3.org/2000/svg" ', 'xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" ', 'width="1px" height="1px" viewBox="0 0 1 1" ', 'enable-background="new 0 0 1 1" xml:space="preserve">', '<polygon transform="scale(100,100)" ', 'points="5,8.292 1.91,10 2.5,6.382 0,3.819 3.455,3.291 5,', '0 6.545,3.291 10,3.819 7.5,6.382 8.09,10 "/>', "</svg>"].join("");
                var e = f.getElementsByTagName("svg");
                return e && e[0] && "viewBox" in e[0]
            }
            /**
             * 获取window对象某个属性是否存在和能取值(一级属性转大写)
             * e代表window下的属性,n代表e下的属性
             */
            function a(e, n) {
                var o = e[0].toUpperCase() + e.slice(1),//首字母转大写
                    t = window[e] || window["moz" + o] || window["webkit" + o];
                return n ? !(!t || !t[n]) : !!t
            }
            /**
             * div元素是否包含某样式属性
             */
            function d(e) {
                return e in v || "-webkit-" + e in v || "-moz-" + e in v
            }
            function u() {
                var e = 0,
                    n = new Promise(function (resolve, reject) {
                        f.addEventListener("click", function () {
                            e++
                        }, { once: !0 }), f.click(), f.click(),
                            setTimeout(function () {
                                resolve(1 === e)
                            });
                    });
                return n;
            }
            function l() {
                if (document.querySelectorAll) {
                    try {
                        document.querySelectorAll(":dir(rtl)")
                    } catch (e) {
                        return
                    }
                    return !0
                }
            }
            function s() {
                var e = document.createElement("video")
                    ;
                if (!e.canPlayType)
                    return -1;
                var n = {
                    probably: 2,
                    maybe: 1
                },
                    o = n[e.canPlayType('video/ogg; codecs="theora, vorbis"')];
                return o || 0
            }
            function support_link_import() {
                var link = document.createElement('link');
                return link && 'import' in link;
            }
            function support_crypto() {
                var crypto = window.crypto || window.webkitCrypto;
                return typeof (crypto) != undefined && ('subtle' in crypto || 'webkitSubtle' in crypto);
            }
            function support_webgl2() {
                var c = document.createElement('canvas');
                return ('WebGL2RenderingContext' in window) || !!(c.getContext('webgl2')) || !!(c.getContext('experimental-webgl2'));
            }
            function hasAdsBox() {
                var e = document.createElement("div");
                e.style.height = "1px", e.className = "adsbox", document.body.appendChild(e);
                return 0 === e.offsetHeight
            }

            var createInput = function (type) {
                var field = document.createElement('input');

                try {
                    field.setAttribute('type', type);
                } catch (e) {
                }

                return field;
            };

            var check_input_color = function () {
                var element = createInput('color');
                element.value = "foobar";
                var sanitization = element.value != 'foobar';
                return sanitization;
            };

            var get_responseEnd = function () {
                if (!!window.performance) {
                    var e = window.performance.timing;
                    if (!!e) {
                        if (e.responseEnd == 0) {
                            return false;
                        } else {
                            return true;
                        }
                    }
                }
            };

            var check_datalist = function () {
                var passed = false;
                try {
                    var element = document.createElement('datalist');

                    try {
                        passed = (typeof HTMLDataListElement != 'undefined' && element instanceof HTMLDataListElement) || element.childNodes.length;
                    } catch (error) {
                    }
                } catch (error) {
                }

                if (passed) {
                    var element = document.createElement('input');
                    passed = !!("list" in element)
                }

                return !!passed;
            };

            var check_webp_support = function () {
                var canvas = document.createElement('canvas');
                var passed = false;
                if (canvas.getContext) {
                    try {
                        passed = canvas.toDataURL('image/webp').substring(5, 15) == 'image/webp';
                    }
                    catch (e) {
                    }
                }

                return !!passed;
            };

            var check_mouse_ev_movementxy = function () {
                var e = document.createEvent("MouseEvent");
                if ('movementX' in e && 'movementY' in e) {
                    return true;
                }
                return false;
            };

            var check_touch_ev_pagexy = function () {
                try {
                    var e = document.createEvent("TouchEvent");
                    if ('pageX' in e && 'pageY' in e) {
                        return true;
                    }
                    return false;
                } catch (error) {
                }
                return false;
            };

            var w = document.createElement("input"),
                f = document.createElement("div"),
                v = f.style,
                data = {};

            data['n1'] = o("cursor", "zoom-out");//div元素样式属性cursor是否能设置为'zoom-out'
            data['n2'] = "placeholder" in w; //input元素是否包含placeholder属性
            data['n3'] = d("font-stretch"); //div元素样式属性是否包含'font-stretch'
            data['n4'] = !!s();//是否支持播放'video/ogg; codecs="theora, vorbis"'
            data['n5'] = t(); //样式color赋值为#33333333 是否能成功
            data['n6'] = r(); //创建一个meter元素，里面是否包含max属性
            data['n7'] = !!i(); //docment是否包含hidden属性
            data['n8'] = "hidden" in f; //div元素是否包含hidden属性
            data['n9'] = "onhashchange" in window; //window是否包含onhashchange方法
            data['n10'] = "devicePixelRatio" in window;  //window是否包含devicePixelRatio属性
            data['n11'] = d("all"); //div元素样式属性是否包含'all'
            data['n12'] = a("speechSynthesis"); //window对象的speechSynthesis属性是否含有有效值
            data['n13'] = c(); //是否能创建svg和svg是否包含viewBox属性
            data['n14'] = a("AudioContext"); //window对象的AudioContex属性是否含有有效值
            data['n15'] = d("font-display");  //div元素样式属性是否包含'font-display'
            data['n16'] = "opener" in window; //window对象是否包含opener属性
            data['n17'] = a("BroadcastChannel"); //window对象的BroadcastChannel属性是否含有有效值
            data['n18'] = !!Object.observe;  //Object对象是否存在observe属性
            data['n19'] = a("FontFace");  //window对象的FontFace属性是否含有有效值
            data['n20'] = a("URL");  //window对象的URL属性是否含有有效值
            data['n21'] = a("Permissions"); //window对象的Permissions属性是否含有有效值
            data['n22'] = a("Gamepad"); //window对象的Gamepad属性是否含有有效值
            data['n23'] = a("performance", "timing"); //window对象的Performance.timing是否含有有效值
            data['n24'] = !!navigator.vibrate; //navigator对象是否含有vibrate属性
            data['n25'] = d("font-kerning"); //div元素样式属性是否包含'font-kerning'
            data['n26'] = a("RTCPeerConnection"); //window对象的RTCPeerConnection属性是否含有有效值
            data['n27'] = a("performance", "now");  //window对象的Performance.now是否含有有效值
            data['n28'] = a("crypto", "getRandomValues");  //window对象的Crypto.getRandomValues是否含有有效值
            data['n29'] = a("IntersectionObserver"); //window对象的IntersectionObserver属性是否含有有效值
            data['n30'] = !!navigator.credentials; //navigator对象是否包含credentials属性
            data['n31'] = d("caret-color"); //div元素样式属性是否包含'caret-color'
            data['n32'] = !!f.requestPointerLock; //div元素是否包含requestPointerLock属性
            data['n33'] = d("offset-path") || d("motion-path"); //div元素样式属性是否包含'offset-path'或'motion-path'属性
            data['n34'] = a("Bluetooth"); //window对象的Bluetooth属性是否含有有效值
            data['n35'] = a("matchMedia"); //window对象的matchMedia属性是否含有有效值
            data['n36'] = d("scroll-behavior"); //div元素样式属性是否包含'scroll-behavior'
            data['n37'] = !!l(); // document.querySelectorAll(":dir(rtl)") 是否能查询成功
            data['n38'] = d("zoom"); //div元素样式属性是否包含'zoom'
            data['n39'] = "min" in w; //input元素是否包含min属性
            data['n40'] = "onunhandledrejection" in window && "onrejectionhandled" in window; //window对象是否包含'onunhandledrejection'和onrejectionhandled
            data['n41'] = "autocomplete" in w; //input元素是否包含autocomplete属性
            data['n42'] = o("display", "flow-root"); //样式属性display赋值为'flow-root' 是否能成功
            data['n43'] = "autofocus" in w; //input元素是否包含autofocus属性

            var e = new Promise(function (resolve, reject) {
                Promise.all([n(), u()]).then(function (results) {
                    data['n44'] = results[0], //script 动态创建 是否是否成功
                        data['n45'] = results[1];//click事件设定once 是否成功
                    resolve(data);
                });
            });

            data['n46'] = "registerElement" in document; //document是否含有registerElement属性
            data['n47'] = support_link_import();//link元素是否包含import属性
            data['n48'] = ('Notification' in window || 'webkitNotifications' in window); //window是否包含Notification属性
            data['n49'] = ('requestFullscreen' in document.documentElement || 'webkitRequestFullScreen' in document.documentElement);//documentElement是否包含requestFullscreen
            data['n50'] = 'requestIdleCallback' in window;//window是否包含requestIdleCallback属性
            data['n51'] = support_crypto();
            data['n52'] = ('PointerEvent' in window || 'webkitPointerEvent' in window);//window是否含有PointerEvent
            data['n53'] = ('pointerLockElement' in document || 'webkitPointerLockElement' in document);//document是否包含pointerLockElement
            data['n54'] = support_webgl2();
            data['n55'] = hasAdsBox();
            // ['n56'] have device motion data
            // ['n57'] have device orientation data
            data['n58'] = check_webp_support(); // webp
            data['n59'] = check_datalist(); // <input list> <datalist> support
            data['n60'] = check_mouse_ev_movementxy(); // mouse event movement;
            data['n61'] = check_touch_ev_pagexy(); // touch event pagex pagey
            data['n62'] = 'DeviceMotionEvent' in window;
            data['n63'] = 'DeviceOrientationEvent' in window;
            data['n64'] = check_input_color(); // input type=color
            data['n65'] = get_responseEnd();

            return e;
        },
        /*获取taiji设备指纹*/
        getTaiJiDeviceFP: function () {
            var c = document.createElement('canvas'),
                e = new Promise(function (resolve, reject) {
                    c ? (setTimeout(function () {
                        var n = c.getContext("2d");
                        n.textBaseline = "top", n.font = "32px Arial", n.fillText("😃", 0, 0);
                        for (var t = n.getImageData(16, 16, 1, 1).data, o = [], i = 0; i < t.length; i++) {
                            o.push(t[i]);
                        }
                        resolve(o);
                    })) : (setTimeout(function () {
                        resolve(!1);
                    }));

                });
            return e;
        },
        getPointInPath: function () {
            var t = document.createElement("canvas");
            t.width = 2e3,
                t.height = 200,
                t.style.display = "inline",
                i = t.getContext("2d");

            return i.rect(0, 0, 10, 10),
                i.rect(2, 2, 6, 6),
                (!1 === i.isPointInPath(5, 5, "evenodd") ? true : false);
        },
        /*fingerprint2.min_c6eb516.js指纹*/
        getCanvasFp1: function (dontUseFakeFontInCanvas) {
            var e = [],
                t = document.createElement("canvas");
            t.width = 2e3, t.height = 200, t.style.display = "inline";
            var i = t.getContext("2d");
            return i.rect(0, 0, 10, 10), i.rect(2, 2, 6, 6),
                i.textBaseline = "alphabetic",
                i.fillStyle = "#f60",
                i.fillRect(125, 1, 62, 20),
                i.fillStyle = "#069",
                dontUseFakeFontInCanvas ? i.font = "11pt Arial" : i.font = "11pt no-real-font-123",
                i.fillText("Cwm fjordbank glyphs vext quiz, 😃", 2, 15),
                i.fillStyle = "rgba(102, 204, 0, 0.2)",
                i.font = "18pt Arial",
                i.fillText("Cwm fjordbank glyphs vext quiz, 😃", 4, 45),
                i.globalCompositeOperation = "multiply",
                i.fillStyle = "rgb(255,0,255)", i.beginPath(),
                i.arc(50, 50, 50, 0, 2 * Math.PI, !0),
                i.closePath(), i.fill(),
                i.fillStyle = "rgb(0,255,255)",
                i.beginPath(),
                i.arc(100, 50, 50, 0, 2 * Math.PI, !0),
                i.closePath(), i.fill(),
                i.fillStyle = "rgb(255,255,0)",
                i.beginPath(),
                i.arc(75, 100, 50, 0, 2 * Math.PI, !0),
                i.closePath(),
                i.fill(),
                i.fillStyle = "rgb(255,0,255)",
                i.arc(75, 75, 75, 0, 2 * Math.PI, !0),
                i.arc(75, 75, 25, 0, 2 * Math.PI, !0),
                i.fill("evenodd"),
                fingerprint = _jz_util.filter(t.toDataURL()),
                fingerprint;
        },
        /*abc122005_v2.js 指纹*/
        getCanvasFp2: function (a, b, c) {
            var a = true,
                b = 'antifraud',
                c = false,
                g = [],
                m = document.createElement("canvas");
            m.width = 2E3;
            m.height = 200;
            m.style.display = "inline";
            var e = m.getContext("2d");
            if (c) try {
                e.lineWidth = 1, e.lineCap = "butt", e.lineJoin = "miter", e.miterLimit = 10, e.lineDashOffset = 0, e.textAlign = "start", e.textBaseline = "alphabetic", e.direction = "inherit", e.strokeStyle = "#000", e.shadowBlur = 0, e.shadowColor = 0, e.shadowOffsetX = 0, e.shadowOffsetY = 0, e.globalAlpha = 1, e.imageSmoothingEnabled = !0
            } catch (y) { }
            e.rect(0, 0, 10, 10);
            e.rect(2, 2, 6, 6);
            e.textBaseline = "alphabetic";
            e.fillStyle = "#f60";
            e.fillRect(125, 1, 62, 20);
            e.fillStyle = "#069";
            e.font = "11pt Arial";
            e.fillText(b, 2, 15);
            e.fillStyle = "rgba(102, 204, 0, 0.2)";
            e.font = "18pt Arial";
            e.fillText(b, 4, 45);
            a && (e.globalCompositeOperation = "multiply");
            e.fillStyle = "rgb(255,0,255)";
            e.beginPath();
            e.arc(50, 50, 50, 0, 2 * Math.PI, !0);
            e.closePath();
            e.fill();
            e.fillStyle = "rgb(0,255,255)";
            e.beginPath();
            e.arc(100, 50, 50, 0, 2 * Math.PI, !0);
            e.closePath();
            e.fill();
            e.fillStyle = "rgb(255,255,0)";
            e.beginPath();
            e.arc(75, 100, 50, 0, 2 * Math.PI, !0);
            e.closePath();
            e.fill();
            e.fillStyle = "rgb(255,0,255)";
            e.arc(75, 75, 75, 0, 2 * Math.PI, !0);
            e.arc(75, 75, 25, 0, 2 * Math.PI, !0);
            e.fill("evenodd");
            return fingerprint = _jz_util.filter(m.toDataURL()),
                fingerprint;
        },
        /*百度统计指纹*/
        getCanvasFp3: function () {
            var canvas = document.createElement("canvas");
            if (!canvas || !canvas.getContext || !canvas.toDataURL) return 0;
            var ctx = canvas.getContext("2d");
            if (!ctx.fillText) return 1;
            var txt = "valve.github.io";
            ctx.textBaseline = "top";
            ctx.font = "14px 'Arial'";
            ctx.textBaseline = "alphabetic";
            ctx.fillStyle = "#f60";
            ctx.fillRect(125, 1, 62, 20);
            ctx.fillStyle = "#069";
            ctx.fillText(txt, 2, 15);
            ctx.fillStyle = "rgba(102, 204, 0, 0.7)";
            ctx.fillText(txt, 4, 17);
            var url = _jz_util.filter(canvas.toDataURL());
            return url;
        },
        getWebglCanvas: function () {
            var e = document.createElement("canvas")
                , t = null;
            try {
                t = e.getContext("webgl") || e.getContext("experimental-webgl")
            } catch (e) { }
            return t || (t = null), t;
        },
        getWebGLFingerprint: function () {
            var e, t = function (t) {
                return e.clearColor(0, 0, 0, 1),
                    e.enable(e.DEPTH_TEST),
                    e.depthFunc(e.LEQUAL),
                    e.clear(e.COLOR_BUFFER_BIT | e.DEPTH_BUFFER_BIT),
                    t[0] + ',' + t[1];
            }, that = this;
            if (!(e = that.getWebglCanvas()))
                return null;
            var i = []
                , a = e.createBuffer(),
                pushData = function (name, value) {
                    i.push({ name: name, value: value });
                };
            e.bindBuffer(e.ARRAY_BUFFER, a);
            var r = new Float32Array([-.2, -.9, 0, .4, -.26, 0, 0, .732134444, 0]);
            e.bufferData(e.ARRAY_BUFFER, r, e.STATIC_DRAW),
                a.itemSize = 3,
                a.numItems = 3;
            var n = e.createProgram()
                , o = e.createShader(e.VERTEX_SHADER)
                ;
            e.shaderSource(o, "attribute vec2 attrVertex;varying vec2 varyinTexCoordinate;uniform vec2 uniformOffset;void main(){varyinTexCoordinate=attrVertex+uniformOffset;gl_Position=vec4(attrVertex,0,1);}"),
                e.compileShader(o);
            var s = e.createShader(e.FRAGMENT_SHADER);
            e.shaderSource(s, "precision mediump float;varying vec2 varyinTexCoordinate;void main() {gl_FragColor=vec4(varyinTexCoordinate,0,1);}"),
                e.compileShader(s),
                e.attachShader(n, o),
                e.attachShader(n, s),
                e.linkProgram(n),
                e.useProgram(n),
                n.vertexPosAttrib = e.getAttribLocation(n, "attrVertex"),
                n.offsetUniform = e.getUniformLocation(n, "uniformOffset"),
                e.enableVertexAttribArray(n.vertexPosArray),
                e.vertexAttribPointer(n.vertexPosAttrib, a.itemSize, e.FLOAT, !1, 0, 0),
                e.uniform2f(n.offsetUniform, 1, 1),
                e.drawArrays(e.TRIANGLE_STRIP, 0, a.numItems),
                null != e.canvas && (url = _jz_util.filter(e.canvas.toDataURL()),
                    pushData('dataUrl', url)),

                pushData("extensions", e.getSupportedExtensions().join(",")),


                pushData("aliased line width range", t(e.getParameter(e.ALIASED_LINE_WIDTH_RANGE))),
                pushData("aliased point size range", t(e.getParameter(e.ALIASED_POINT_SIZE_RANGE))),
                pushData("alpha bits", e.getParameter(e.ALPHA_BITS)),
                pushData("antialiasing", (e.getContextAttributes().antialias ? "yes" : "no")),
                pushData("red bits", e.getParameter(e.RED_BITS)),
                pushData("blue bits", e.getParameter(e.BLUE_BITS)),
                pushData("green bits", e.getParameter(e.GREEN_BITS)),
                pushData("depth bits", e.getParameter(e.DEPTH_BITS)),

                pushData("max anisotropy", function (e) {
                    var t, i = e.getExtension("EXT_texture_filter_anisotropic") || e.getExtension("WEBKIT_EXT_texture_filter_anisotropic") || e.getExtension("MOZ_EXT_texture_filter_anisotropic");
                    return i ? (t = e.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT),
                        0 === t && (t = 2),
                        t) : null
                }(e)),

                pushData("max combined texture image units", e.getParameter(e.MAX_COMBINED_TEXTURE_IMAGE_UNITS)),
                pushData("max cube map texture size", e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE)),
                pushData("max fragment uniform vectors", e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS)),
                pushData("max render buffer size", e.getParameter(e.MAX_RENDERBUFFER_SIZE)),
                pushData("max texture image units", e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)),
                pushData("max texture size", e.getParameter(e.MAX_TEXTURE_SIZE)),
                pushData("max varying vectors", e.getParameter(e.MAX_VARYING_VECTORS)),
                pushData("max vertex attribs", e.getParameter(e.MAX_VERTEX_ATTRIBS)),
                pushData("max vertex texture image units", e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS)),
                pushData("max vertex uniform vectors", e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS)),
                pushData("max viewport dims", t(e.getParameter(e.MAX_VIEWPORT_DIMS))),

                pushData("renderer:", e.getParameter(e.RENDERER)),
                pushData("shading language version", e.getParameter(e.SHADING_LANGUAGE_VERSION)),
                pushData("stencil bits", e.getParameter(e.STENCIL_BITS)),
                pushData("vendor", e.getParameter(e.VENDOR)),
                pushData("version", e.getParameter(e.VERSION));
            try {
                var l = e.getExtension("WEBGL_debug_renderer_info");
                l && (pushData("unmasked vendor", e.getParameter(l.UNMASKED_VENDOR_WEBGL)),
                    pushData("unmasked renderer", e.getParameter(l.UNMASKED_RENDERER_WEBGL)))
            } catch (e) { }


            e.getShaderPrecisionFormat && (
                pushData("vertex shader high float precision", e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.HIGH_FLOAT).precision),
                pushData("vertex shader high float precision rangeMin", e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.HIGH_FLOAT).rangeMin),
                pushData("vertex shader high float precision rangeMax", e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.HIGH_FLOAT).rangeMax),
                pushData("vertex shader medium float precision", e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.MEDIUM_FLOAT).precision),
                pushData("vertex shader medium float precision rangeMin", e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.MEDIUM_FLOAT).rangeMin),
                pushData("vertex shader medium float precision rangeMax", e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.MEDIUM_FLOAT).rangeMax),
                pushData("vertex shader low float precision", e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.LOW_FLOAT).precision),
                pushData("vertex shader low float precision rangeMin", e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.LOW_FLOAT).rangeMin),
                pushData("vertex shader low float precision rangeMax", e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.LOW_FLOAT).rangeMax),
                pushData("fragment shader high float precision", e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.HIGH_FLOAT).precision),
                pushData("fragment shader high float precision rangeMin", e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.HIGH_FLOAT).rangeMin),
                pushData("fragment shader high float precision rangeMax", e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.HIGH_FLOAT).rangeMax),
                pushData("fragment shader medium float precision", e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.MEDIUM_FLOAT).precision),
                pushData("fragment shader medium float precision rangeMin", e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.MEDIUM_FLOAT).rangeMin),
                pushData("fragment shader medium float precision rangeMax", e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.MEDIUM_FLOAT).rangeMax),
                pushData("fragment shader low float precision", e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.LOW_FLOAT).precision),
                pushData("fragment shader low float precision rangeMin", e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.LOW_FLOAT).rangeMin),
                pushData("fragment shader low float precision rangeMax", e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.LOW_FLOAT).rangeMax),
                pushData("vertex shader high int precision", e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.HIGH_INT).precision),
                pushData("vertex shader high int precision rangeMin", e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.HIGH_INT).rangeMin),
                pushData("vertex shader high int precision rangeMax", e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.HIGH_INT).rangeMax),
                pushData("vertex shader medium int precision", e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.MEDIUM_INT).precision),
                pushData("vertex shader medium int precision rangeMin", e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.MEDIUM_INT).rangeMin),
                pushData("vertex shader medium int precision rangeMax", e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.MEDIUM_INT).rangeMax),
                pushData("vertex shader low int precision", e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.LOW_INT).precision),
                pushData("vertex shader low int precision rangeMin", e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.LOW_INT).rangeMin),
                pushData("vertex shader low int precision rangeMax", e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.LOW_INT).rangeMax),
                pushData("fragment shader high int precision", e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.HIGH_INT).precision),
                pushData("fragment shader high int precision rangeMin", e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.HIGH_INT).rangeMin),
                pushData("fragment shader high int precision rangeMax", e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.HIGH_INT).rangeMax),
                pushData("fragment shader medium int precision", e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.MEDIUM_INT).precision),
                pushData("fragment shader medium int precision rangeMin", e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.MEDIUM_INT).rangeMin),
                pushData("fragment shader medium int precision rangeMax", e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.MEDIUM_INT).rangeMax),
                pushData("fragment shader low int precision", e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.LOW_INT).precision),
                pushData("fragment shader low int precision rangeMin", e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.LOW_INT).rangeMin),
                pushData("fragment shader low int precision rangeMax", e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.LOW_INT).rangeMax)
            );

            return i;
        },
        /*https://m.baidu.com/se/static/js/modules/device_data_dep/webgl_fp_c76c5cb.js*/
        webgl_fp: function () {
            var _canvas = document.createElement('canvas');
            var e = _canvas.getContext("webgl") || _canvas.getContext("experimental-webgl");
            function r(e, r, t) {
                var n = a(e, r, t);
                return !!n && (e.useProgram(n), e.program = n, !0)
            }
            function a(e, r, a) {
                var n = t(e, e.VERTEX_SHADER, r),
                    o = t(e, e.FRAGMENT_SHADER, a);
                if (!n || !o) return null;
                var i = e.createProgram();
                return i ? (e.attachShader(i, n), e.attachShader(i, o), e.linkProgram(i), e.getProgramParameter(i, e.LINK_STATUS) ? i : (e.deleteProgram(i), e.deleteShader(o), e.deleteShader(n), null)) : null
            }
            function t(e, r, a) {
                var t = e.createShader(r);
                return null == t ? null : (e.shaderSource(t, a), e.compileShader(t), e.getShaderParameter(t, e.COMPILE_STATUS) ? t : (e.deleteShader(t), null))
            }

            var o = ["attribute vec2 attrVertex;", "varying vec2 varyinTexCoordinate;", "uniform vec2 uniformOffset;", "void main() {", "varyinTexCoordinate = attrVertex + uniformOffset;", "gl_Position=vec4(attrVertex,0.0,1.0);", "}"].join(""),
                i = ["precision mediump float;", "varying vec2 varyinTexCoordinate;", "void main () {", "gl_FragColor = vec4(varyinTexCoordinate,0.0,1.0);", "}"].join("");

            return new Promise(function (resolve, reject) {
                e ? (setTimeout(function () {
                    try {
                        r(e, o, i) || resolve(), e.clearColor(0, 0, 0, 1), e.clear(e.COLOR_BUFFER_BIT), e.drawArrays(e.POINTS, 0, 1);
                    } catch (e) {
                        resolve('error');
                    }
                    setTimeout(function () {
                        if (!!e.canvas) {
                            var img_base64_data = _jz_util.filter(e.canvas.toDataURL());
                            resolve(img_base64_data);
                        } else {
                            resolve('error');
                        }
                    })
                })) : (setTimeout(function () {
                    resolve('error');
                }));
            });
        }
    };

    /*环球*/
    var _hq = {
        getCanvasFingerprint: function () {
            var t = document.createElement('canvas'),
                e = t.getContext('2d'),
                i = 'http://valve.github.io';
            e.textBaseline = 'top',
                e.font = '14px "Arial"',
                e.textBaseline = 'alphabetic',
                e.fillStyle = '#f60',
                e.fillRect(125, 1, 62, 20),
                e.fillStyle = '#069',
                e.fillText(i, 2, 15),
                e.fillStyle = 'rgba(102, 204, 0, 0.7)',
                e.fillText(i, 4, 17);
            return _jz_util.filter(t.toDataURL());
        }
    };

    /**京东指纹 */
    var _jd = {
        fingerprint1: function () {
            var b = document.createElement("canvas");
            var a = b.getContext("2d");
            a.fillStyle = "red";
            a.fillRect(30, 10, 200, 100);
            a.strokeStyle = "#1a3bc1";
            a.lineWidth = 6;
            a.lineCap = "round";
            a.arc(50, 50, 20, 0, Math.PI, !1);
            a.stroke();
            a.fillStyle = "#42e1a2";
            a.font = "15.4px 'Arial'";
            a.textBaseline = "alphabetic";
            a.fillText("PR flacks quiz gym: TV DJ box when? \u2620", 15, 60);
            a.shadowOffsetX = 1;
            a.shadowOffsetY = 2;
            a.shadowColor = "white";
            a.fillStyle = "rgba(0, 0, 200, 0.5)";
            a.font = "60px 'Not a real font'";
            a.fillText("No\u9a97", 40, 80);
            return _jz_util.filter(b.toDataURL());
        }
    };

    /** 58指纹 */
    var _58 = {
        getFontsKey: function () {
            var supports = [];
            var r = ["monospace", "sans-serif", "serif"]
                , i = document.getElementsByTagName("body")[0]
                , o = document.createElement("span");
            o.style.fontSize = "72px",
                o.innerHTML = "mmmmmmmmmmlli";
            var s = {}
                , c = {};
            var f1 = [];
            for (var e in r)
                o.style.fontFamily = r[e],
                    i.appendChild(o),
                    s[r[e]] = o.offsetWidth,
                    c[r[e]] = o.offsetHeight,
                    i.removeChild(o);
            for (var t = function (e) {
                var t = !1;
                for (var n in r) {
                    o.style.fontFamily = e + "," + r[n],
                        i.appendChild(o);
                    var a = o.offsetWidth !== s[r[n]] || o.offsetHeight !== c[r[n]];
                    i.removeChild(o),
                        t = t || a
                }
                return t
            }, n = ["PMingLiU", "Microsoft JhengHei", "Microsoft YaHei", "LiSu", "YouYuan", "STXihei", "STKaiti", "STSong", "STZhongsong", "STFangsong", "FZShuTi", "FZYaoti", "STCaiyun", "STHupo", "STLiti", "STXingkai", "STXinwei", "STHeiti", "LiHei Pro Medium", "LiSong Pro Light", "BiauKai", "Apple LiGothic Medium", "Apple LiSung Light", "Andale Mono", "Arial", "Arial Black", "Arial Hebrew", "Arial MT", "Arial Narrow", "Arial Rounded MT Bold", "Arial Unicode MS", "Bitstream Vera Sans Mono", "Book Antiqua", "Bookman Old Style", "Calibri", "Cambria", "Cambria Math", "Century", "Century Gothic", "Century Schoolbook", "Comic Sans", "Comic Sans MS", "Consolas", "Courier", "Courier New", "Garamond", "Geneva", "Georgia", "Helvetica", "Helvetica Neue", "Impact", "Lucida Bright", "Lucida Calligraphy", "Lucida Console", "Lucida Fax", "LUCIDA GRANDE", "Lucida Handwriting", "Lucida Sans", "Lucida Sans Typewriter", "Lucida Sans Unicode", "Microsoft Sans Serif", "Monaco", "Monotype Corsiva", "MS Gothic", "MS Outlook", "MS PGothic", "MS Reference Sans Serif", "MS Sans Serif", "MS Serif", "MYRIAD", "MYRIAD PRO", "Palatino", "Palatino Linotype", "Segoe Print", "Segoe Script", "Segoe UI", "Segoe UI Light", "Segoe UI Semibold", "Segoe UI Symbol", "Tahoma", "Times", "Times New Roman", "Times New Roman PS", "Trebuchet MS", "Verdana", "Wingdings", "Wingdings 2", "Wingdings 3", "Abadi MT Condensed Light", "Academy Engraved LET", "ADOBE CASLON PRO", "Adobe Garamond", "ADOBE GARAMOND PRO", "Agency FB", "Aharoni", "Albertus Extra Bold", "Albertus Medium", "Algerian", "Amazone BT", "American Typewriter"], a = [], l = 0, u = n.length; l < u; l++)
                t(n[l]) && f1.push(n[l]);

            return f1;
        },
        getAudioKey: function () {
            return new Promise(function (resolve, reject) {
                var g = window;
                if ((g.AudioContext || g.webkitAudioContext) === undefined) resolve('');
                else try {
                    var e, t, s, c;
                    (e = new (g.OfflineAudioContext || g.webkitOfflineAudioContext)(1, 44100, 44100)),
                        (t = e.createOscillator()).type = "triangle",
                        t.frequency.value = 1e4,
                        (s = e.createDynamicsCompressor()).threshold && (s.threshold.value = -50),
                        s.knee && (s.knee.value = 40),
                        s.ratio && (s.ratio.value = 12),
                        s.reduction && (s.reduction.value = -20),
                        s.attack && (s.attack.value = 0),
                        s.release && (s.release.value = .25),
                        t.connect(s),
                        s.connect(e.destination),
                        t.start(0),
                        e.startRendering(),
                        e.oncomplete = function (e) {
                            for (var n = [], a = 0; a < e.renderedBuffer.length; a++)
                                n.push(e.renderedBuffer.getChannelData(0)[a].toString());
                            c = n;

                            s.disconnect(), resolve(c.join(','));
                        }
                } catch (n) {
                    resolve('');
                }
            });
        },
        getCanvasFp: function () {
            var t = document.createElement("canvas");
            t.width = 2e3, t.height = 200, t.style.display = "inline";
            var n = t.getContext("2d");
            n.rect(0, 0, 10, 10),
                n.rect(2, 2, 6, 6),
                n.textBaseline = "alphabetic",
                n.fillStyle = "#f60",
                n.fillRect(125, 1, 62, 20),
                n.fillStyle = "#069",
                n.font = "11pt Arial",
                n.fillText("Cwm fjordbank glyphs vext quiz, 😃", 2, 15),
                n.fillStyle = "rgba(102, 204, 0, 0.7)",
                n.font = "18pt Arial",
                n.fillText("Cwm fjordbank glyphs vext quiz, 😃", 4, 45),
                n.globalCompositeOperation = "multiply",
                n.fillStyle = "rgb(255,0,255)",
                n.beginPath(),
                n.arc(50, 50, 50, 0, 2 * Math.PI, !0),
                n.closePath(),
                n.fill(),
                n.fillStyle = "rgb(0,255,255)",
                n.beginPath(),
                n.arc(100, 50, 50, 0, 2 * Math.PI, !0),
                n.closePath(),
                n.fill(),
                n.fillStyle = "rgb(255,255,0)",
                n.beginPath(),
                n.arc(75, 100, 50, 0, 2 * Math.PI, !0),
                n.closePath(), n.fill(),
                n.fillStyle = "rgb(255,0,255)",
                n.arc(75, 75, 75, 0, 2 * Math.PI, !0),
                n.arc(75, 75, 25, 0, 2 * Math.PI, !0),
                n.fill("evenodd");
            return _jz_util.filter(t.toDataURL());
        },
        getCanvasFpArr: function () {

            try {
                var t = document.createElement("canvas");
                t.width = 2e3, t.height = 200, t.style.display = "inline";
                var n = t.getContext("2d");

                var fp1, fp2, fp3;

                n.rect(0, 0, 10, 10), n.rect(2, 2, 6, 6), n.textBaseline = "alphabetic", n.fillStyle = "#f60", n.fillRect(125, 1, 62, 20), n.fillStyle = "#069", n.font = "11pt Arial", n.fillText("Cwm fjordbank glyphs vext quiz, 😃", 2, 15), n.fillStyle = "rgba(102, 204, 0, 0.7)", n.font = "18pt Arial", n.fillText("Cwm fjordbank glyphs vext quiz, 😃", 4, 45), n.globalCompositeOperation = "multiply", n.fillStyle = "rgb(255,0,255)", n.beginPath(), n.arc(50, 49, 49, 0, 2 * Math.PI, !0), n.closePath(), n.fill(), n.fillStyle = "rgb(0,255,255)", n.beginPath(), n.arc(100, 49, 49, 0, 2 * Math.PI, !0), n.closePath(), n.fill(), n.fillStyle = "rgb(255,255,0)", n.beginPath(), n.arc(75, 100, 50, 0, 2 * Math.PI, !0), n.closePath(), n.fill(), n.fillStyle = "rgb(255,0,255)", n.arc(75, 75, 75, 0, 2 * Math.PI, !0), n.arc(75, 75, 25, 0, 2 * Math.PI, !0), n.fill("evenodd");
                fp1 = _jz_util.filter(t.toDataURL());

                n.rect(0, 0, 10, 10), n.rect(2, 2, 6, 6), n.textBaseline = "alphabetic", n.fillStyle = "#f60", n.fillRect(125, 1, 62, 20), n.fillStyle = "#069", n.font = "11pt Arial", n.fillText("Cwm fjordbank glyphs vext quiz, 😃", 2, 15), n.fillStyle = "rgba(102, 204, 0, 0.7)", n.font = "18pt Arial", n.fillText("Cwm fjordbank glyphs vext quiz, 😃", 4, 45), n.globalCompositeOperation = "multiply", n.fillStyle = "rgb(255,0,255)", n.beginPath(), n.arc(50, 51, 51, 0, 2 * Math.PI, !0), n.closePath(), n.fill(), n.fillStyle = "rgb(0,255,255)", n.beginPath(), n.arc(100, 51, 51, 0, 2 * Math.PI, !0), n.closePath(), n.fill(), n.fillStyle = "rgb(255,255,0)", n.beginPath(), n.arc(75, 100, 50, 0, 2 * Math.PI, !0), n.closePath(), n.fill(), n.fillStyle = "rgb(255,0,255)", n.arc(75, 75, 75, 0, 2 * Math.PI, !0), n.arc(75, 75, 25, 0, 2 * Math.PI, !0), n.fill("evenodd");
                fp2 = _jz_util.filter(t.toDataURL());

                n.rect(0, 0, 10, 10), n.rect(2, 2, 6, 6), n.textBaseline = "alphabetic", n.fillStyle = "#f60", n.fillRect(125, 1, 62, 20), n.fillStyle = "#069", n.font = "11pt Arial", n.fillText("Cwm fjordbank glyphs vext quiz, 😃", 2, 15), n.fillStyle = "rgba(102, 204, 0, 0.7)", n.font = "18pt Arial", n.fillText("Cwm fjordbank glyphs vext quiz, 😃", 4, 45), n.globalCompositeOperation = "multiply", n.fillStyle = "rgb(255,0,255)", n.beginPath(), n.arc(50, 52, 52, 0, 2 * Math.PI, !0), n.closePath(), n.fill(), n.fillStyle = "rgb(0,255,255)", n.beginPath(), n.arc(100, 52, 52, 0, 2 * Math.PI, !0), n.closePath(), n.fill(), n.fillStyle = "rgb(255,255,0)", n.beginPath(), n.arc(75, 100, 50, 0, 2 * Math.PI, !0), n.closePath(), n.fill(), n.fillStyle = "rgb(255,0,255)", n.arc(75, 75, 75, 0, 2 * Math.PI, !0), n.arc(75, 75, 25, 0, 2 * Math.PI, !0), n.fill("evenodd");
                fp3 = _jz_util.filter(t.toDataURL());

                return [fp1, fp2, fp3];
            } catch (e) {
                return new Array(3);
            }
        }
    };

    /*微转 */
    var _wz = {
        getFontKeys: function () {
            var u = ["monospace", "sans-serif", "serif"],
                d = ["Andale Mono", "Arial", "Arial Black", "Arial Hebrew", "Arial MT", "Arial Narrow", "Arial Rounded MT Bold", "Arial Unicode MS", "Bitstream Vera Sans Mono", "Book Antiqua", "Bookman Old Style", "Calibri", "Cambria", "Cambria Math", "Century", "Century Gothic", "Century Schoolbook", "Comic Sans", "Comic Sans MS", "Consolas", "Courier", "Courier New", "Geneva", "Georgia", "Helvetica", "Helvetica Neue", "Impact", "Lucida Bright", "Lucida Calligraphy", "Lucida Console", "Lucida Fax", "LUCIDA GRANDE", "Lucida Handwriting", "Lucida Sans", "Lucida Sans Typewriter", "Lucida Sans Unicode", "Microsoft Sans Serif", "Monaco", "Monotype Corsiva", "MS Gothic", "MS Outlook", "MS PGothic", "MS Reference Sans Serif", "MS Sans Serif", "MS Serif", "MYRIAD", "MYRIAD PRO", "Palatino", "Palatino Linotype", "Segoe Print", "Segoe Script", "Segoe UI", "Segoe UI Light", "Segoe UI Semibold", "Segoe UI Symbol", "Tahoma", "Times", "Times New Roman", "Times New Roman PS", "Trebuchet MS", "Verdana", "Wingdings", "Wingdings 2", "Wingdings 3"];
            d = d.concat(["Abadi MT Condensed Light", "Academy Engraved LET", "ADOBE CASLON PRO", "Adobe Garamond", "ADOBE GARAMOND PRO", "Agency FB", "Aharoni", "Albertus Extra Bold", "Albertus Medium", "Algerian", "Amazone BT", "American Typewriter", "American Typewriter Condensed", "AmerType Md BT", "Andalus", "Angsana New", "AngsanaUPC", "Antique Olive", "Aparajita", "Apple Chancery", "Apple Color Emoji", "Apple SD Gothic Neo", "Arabic Typesetting", "ARCHER", "ARNO PRO", "Arrus BT", "Aurora Cn BT", "AvantGarde Bk BT", "AvantGarde Md BT", "AVENIR", "Ayuthaya", "Bandy", "Bangla Sangam MN", "Bank Gothic", "BankGothic Md BT", "Baskerville", "Baskerville Old Face", "Batang", "BatangChe", "Bauer Bodoni", "Bauhaus 93", "Bazooka", "Bell MT", "Bembo", "Benguiat Bk BT", "Berlin Sans FB", "Berlin Sans FB Demi", "Bernard MT Condensed", "BernhardFashion BT", "BernhardMod BT", "Big Caslon", "BinnerD", "Blackadder ITC", "BlairMdITC TT", "Bodoni 72", "Bodoni 72 Oldstyle", "Bodoni 72 Smallcaps", "Bodoni MT", "Bodoni MT Black", "Bodoni MT Condensed", "Bodoni MT Poster Compressed", "Bookshelf Symbol 7", "Boulder", "Bradley Hand", "Bradley Hand ITC", "Bremen Bd BT", "Britannic Bold", "Broadway", "Browallia New", "BrowalliaUPC", "Brush Script MT", "Californian FB", "Calisto MT", "Calligrapher", "Candara", "CaslonOpnface BT", "Castellar", "Centaur", "Cezanne", "CG Omega", "CG Times", "Chalkboard", "Chalkboard SE", "Chalkduster", "Charlesworth", "Charter Bd BT", "Charter BT", "Chaucer", "ChelthmITC Bk BT", "Chiller", "Clarendon", "Clarendon Condensed", "CloisterBlack BT", "Cochin", "Colonna MT", "Constantia", "Cooper Black", "Copperplate", "Copperplate Gothic", "Copperplate Gothic Bold", "Copperplate Gothic Light", "CopperplGoth Bd BT", "Corbel", "Cordia New", "CordiaUPC", "Cornerstone", "Coronet", "Cuckoo", "Curlz MT", "DaunPenh", "Dauphin", "David", "DB LCD Temp", "DELICIOUS", "Denmark", "DFKai-SB", "Didot", "DilleniaUPC", "DIN", "DokChampa", "Dotum", "DotumChe", "Ebrima", "Edwardian Script ITC", "Elephant", "English 111 Vivace BT", "Engravers MT", "EngraversGothic BT", "Eras Bold ITC", "Eras Demi ITC", "Eras Light ITC", "Eras Medium ITC", "EucrosiaUPC", "Euphemia", "Euphemia UCAS", "EUROSTILE", "Exotc350 Bd BT", "FangSong", "Felix Titling", "Fixedsys", "FONTIN", "Footlight MT Light", "Forte", "FrankRuehl", "Fransiscan", "Freefrm721 Blk BT", "FreesiaUPC", "Freestyle Script", "French Script MT", "FrnkGothITC Bk BT", "Fruitger", "FRUTIGER", "Futura", "Futura Bk BT", "Futura Lt BT", "Futura Md BT", "Futura ZBlk BT", "FuturaBlack BT", "Gabriola", "Galliard BT", "Gautami", "Geeza Pro", "Geometr231 BT", "Geometr231 Hv BT", "Geometr231 Lt BT", "GeoSlab 703 Lt BT", "GeoSlab 703 XBd BT", "Gigi", "Gill Sans", "Gill Sans MT", "Gill Sans MT Condensed", "Gill Sans MT Ext Condensed Bold", "Gill Sans Ultra Bold", "Gill Sans Ultra Bold Condensed", "Gisha", "Gloucester MT Extra Condensed", "GOTHAM", "GOTHAM BOLD", "Goudy Old Style", "Goudy Stout", "GoudyHandtooled BT", "GoudyOLSt BT", "Gujarati Sangam MN", "Gulim", "GulimChe", "Gungsuh", "GungsuhChe", "Gurmukhi MN", "Haettenschweiler", "Harlow Solid Italic", "Harrington", "Heather", "Heiti SC", "Heiti TC", "HELV", "Herald", "High Tower Text", "Hiragino Kaku Gothic ProN", "Hiragino Mincho ProN", "Hoefler Text", "Humanst 521 Cn BT", "Humanst521 BT", "Humanst521 Lt BT", "Imprint MT Shadow", "Incised901 Bd BT", "Incised901 BT", "Incised901 Lt BT", "INCONSOLATA", "Informal Roman", "Informal011 BT", "INTERSTATE", "IrisUPC", "Iskoola Pota", "JasmineUPC", "Jazz LET", "Jenson", "Jester", "Jokerman", "Juice ITC", "Kabel Bk BT", "Kabel Ult BT", "Kailasa", "KaiTi", "Kalinga", "Kannada Sangam MN", "Kartika", "Kaufmann Bd BT", "Kaufmann BT", "Khmer UI", "KodchiangUPC", "Kokila", "Korinna BT", "Kristen ITC", "Krungthep", "Kunstler Script", "Lao UI", "Latha", "Leelawadee", "Letter Gothic", "Levenim MT", "LilyUPC", "Lithograph", "Lithograph Light", "Long Island", "Lydian BT", "Magneto", "Maiandra GD", "Malayalam Sangam MN", "Malgun Gothic", "Mangal", "Marigold", "Marion", "Marker Felt", "Market", "Marlett", "Matisse ITC", "Matura MT Script Capitals", "Meiryo", "Meiryo UI", "Microsoft Himalaya", "Microsoft JhengHei", "Microsoft New Tai Lue", "Microsoft PhagsPa", "Microsoft Tai Le", "Microsoft Uighur", "Microsoft YaHei", "Microsoft Yi Baiti", "MingLiU", "MingLiU_HKSCS", "MingLiU_HKSCS-ExtB", "MingLiU-ExtB", "Minion", "Minion Pro", "Miriam", "Miriam Fixed", "Mistral", "Modern", "Modern No. 20", "Mona Lisa Solid ITC TT", "Mongolian Baiti", "MONO", "MoolBoran", "Mrs Eaves", "MS LineDraw", "MS Mincho", "MS PMincho", "MS Reference Specialty", "MS UI Gothic", "MT Extra", "MUSEO", "MV Boli", "Nadeem", "Narkisim", "NEVIS", "News Gothic", "News GothicMT", "NewsGoth BT", "Niagara Engraved", "Niagara Solid", "Noteworthy", "NSimSun", "Nyala", "OCR A Extended", "Old Century", "Old English Text MT", "Onyx", "Onyx BT", "OPTIMA", "Oriya Sangam MN", "OSAKA", "OzHandicraft BT", "Palace Script MT", "Papyrus", "Parchment", "Party LET", "Pegasus", "Perpetua", "Perpetua Titling MT", "PetitaBold", "Pickwick", "Plantagenet Cherokee", "Playbill", "PMingLiU", "PMingLiU-ExtB", "Poor Richard", "Poster", "PosterBodoni BT", "PRINCETOWN LET", "Pristina", "PTBarnum BT", "Pythagoras", "Raavi", "Rage Italic", "Ravie", "Ribbon131 Bd BT", "Rockwell", "Rockwell Condensed", "Rockwell Extra Bold", "Rod", "Roman", "Sakkal Majalla", "Santa Fe LET", "Savoye LET", "Sceptre", "Script", "Script MT Bold", "SCRIPTINA", "Serifa", "Serifa BT", "Serifa Th BT", "ShelleyVolante BT", "Sherwood", "Shonar Bangla", "Showcard Gothic", "Shruti", "Signboard", "SILKSCREEN", "SimHei", "Simplified Arabic", "Simplified Arabic Fixed", "SimSun", "SimSun-ExtB", "Sinhala Sangam MN", "Sketch Rockwell", "Skia", "Small Fonts", "Snap ITC", "Snell Roundhand", "Socket", "Souvenir Lt BT", "Staccato222 BT", "Steamer", "Stencil", "Storybook", "Styllo", "Subway", "Swis721 BlkEx BT", "Swiss911 XCm BT", "Sylfaen", "Synchro LET", "System", "Tamil Sangam MN", "Technical", "Teletype", "Telugu Sangam MN", "Tempus Sans ITC", "Terminal", "Thonburi", "Traditional Arabic", "Trajan", "TRAJAN PRO", "Tristan", "Tubular", "Tunga", "Tw Cen MT", "Tw Cen MT Condensed", "Tw Cen MT Condensed Extra Bold", "TypoUpright BT", "Unicorn", "Univers", "Univers CE 55 Medium", "Univers Condensed", "Utsaah", "Vagabond", "Vani", "Vijaya", "Viner Hand ITC", "VisualUI", "Vivaldi", "Vladimir Script", "Vrinda", "Westminster", "WHITNEY", "Wide Latin", "ZapfEllipt BT", "ZapfHumnst BT", "ZapfHumnst Dm BT", "Zapfino", "Zurich BlkEx BT", "Zurich Ex BT", "ZWAdobeF"]);

            var a = document.getElementsByTagName("body")[0], r = document.createElement("div"), g = document.createElement("div"), n = {}, i = {}, f = function () {
                var e = document.createElement("span");
                return e.style.position = "absolute", e.style.left = "-9999px", e.style.fontSize = "72px",
                    e.style.fontStyle = "normal", e.style.fontWeight = "normal", e.style.letterSpacing = "normal",
                    e.style.lineBreak = "auto", e.style.lineHeight = "normal", e.style.textTransform = "none",
                    e.style.textAlign = "left", e.style.textDecoration = "none", e.style.textShadow = "none",
                    e.style.whiteSpace = "normal", e.style.wordBreak = "normal", e.style.wordSpacing = "normal",
                    e.innerHTML = "mmmmmmmmmmlli", e;
            }, o = function (e) {
                for (var t = !1, a = 0; a < u.length; a++) if (t = e[a].offsetWidth !== n[u[a]] || e[a].offsetHeight !== i[u[a]]) return t;
                return t;
            }, l = function () {
                for (var e = [], t = 0, a = u.length; t < a; t++) {
                    var n = f();
                    n.style.fontFamily = u[t], r.appendChild(n), e.push(n);
                }
                return e;
            }();
            a.appendChild(r);
            for (var s = 0, c = u.length; s < c; s++) n[u[s]] = l[s].offsetWidth, i[u[s]] = l[s].offsetHeight;
            var h = function () {
                for (var e, t, a, n = {}, r = 0, i = d.length; r < i; r++) {
                    for (var o = [], l = 0, s = u.length; l < s; l++) {
                        var c = (e = d[r], t = u[l], a = void 0, (a = f()).style.fontFamily = "'" + e + "'," + t,
                            a);
                        g.appendChild(c), o.push(c);
                    }
                    n[d[r]] = o;
                }
                return n;
            }();
            a.appendChild(g);
            for (var m = [], T = 0, p = d.length; T < p; T++)
                o(h[d[T]]) && m.push(d[T]);
            return a.removeChild(g), a.removeChild(r), m;
        },
        get_WWZ_BD_FP: function () {
            var b = document.createElement("canvas")
                , a = b.getContext("2d");
            a.textBaseline = "top";
            a.font = "14px 'Arial'";
            a.textBaseline = "alphabetic";
            a.fillStyle = "#f60";
            a.fillRect(125, 1, 62, 20);
            a.fillStyle = "#069";
            a.fillText("http://www.baidu.com", 2, 15);
            a.fillStyle = "rgba(102, 204, 0, 0.7)";
            a.fillText("http://www.baidu.com", 4, 17);
            return _jz_util.filter(b.toDataURL());
        },
        get_YTZ_FP: function (dontUseFakeFontInCanvas) {
            var t = '',
                a = document.createElement("canvas");
            a.width = 2e3,
                a.height = 200,
                a.style.display = "inline";
            var n = a.getContext("2d");
            return n.rect(0, 0, 10, 10),
                n.rect(2, 2, 6, 6),
                //t.push("canvas winding:" + (!1 === n.isPointInPath(5, 5, "evenodd") ? "yes" : "no")),
                n.textBaseline = "alphabetic",
                n.fillStyle = "#f60",
                n.fillRect(125, 1, 62, 20),
                n.fillStyle = "#069",
                dontUseFakeFontInCanvas ? n.font = "11pt Arial" : n.font = "11pt no-real-font-123",
                n.fillText("Cwm fjordbank glyphs vext quiz, ??", 2, 15),
                n.fillStyle = "rgba(102, 204, 0, 0.2)",
                n.font = "18pt Arial",
                n.fillText("Cwm fjordbank glyphs vext quiz, ??", 4, 45),
                n.globalCompositeOperation = "multiply",
                n.fillStyle = "rgb(255,0,255)",
                n.beginPath(),
                n.arc(50, 50, 50, 0, 2 * Math.PI, !0),
                n.closePath(),
                n.fill(),
                n.fillStyle = "rgb(0,255,255)",
                n.beginPath(),
                n.arc(100, 50, 50, 0, 2 * Math.PI, !0),
                n.closePath(),
                n.fill(),
                n.fillStyle = "rgb(255,255,0)",
                n.beginPath(),
                n.arc(75, 100, 50, 0, 2 * Math.PI, !0),
                n.closePath(),
                n.fill(),
                n.fillStyle = "rgb(255,0,255)",
                n.arc(75, 75, 75, 0, 2 * Math.PI, !0),
                n.arc(75, 75, 25, 0, 2 * Math.PI, !0),
                n.fill("evenodd"),
                t = _jz_util.filter(a.toDataURL()),
                t
        }
    };

    /**基础信息 */
    var _baseInfo = {
        getValue: function (o, d) {
            return typeof o == 'undefined' ? (d || 'undefined') : o;
        },
        getNavigatorKeys: function () {
            var e = new Array;
            for (var t in navigator)
                e.push(t);
            return e.join("|")
        },
        getNavigatorInfo: function () {
            var that = this;
            return {
                appCodeName: that.getValue(navigator.appCodeName),
                appName: that.getValue(navigator.appName),
                vendor: that.getValue(navigator.vendor),
                vendorSub: that.getValue(navigator.vendorSub),
                product: that.getValue(navigator.product),
                productSub: that.getValue(navigator.productSub),
                appVersion: that.getValue(navigator.appVersion),
                platform: that.getValue(navigator.platform),
                cookieEnabled: that.getValue(navigator.cookieEnabled, ''),
                onLine: that.getValue(navigator.onLine, ''),
                javaEnabled: navigator.javaEnabled().toString(),
                deviceMemory: that.getValue(navigator.deviceMemory),
                hardwareConcurrency: that.getValue(navigator.hardwareConcurrency),
                userAgent: that.getValue(navigator.userAgent),
                maxTouchPoints: that.getValue(navigator.maxTouchPoints),
                doNotTrack: that.getValue(navigator.doNotTrack),
                cpuClass: that.getValue(navigator.cpuClass),
                language: that.getValue(navigator.language),
                languages: ('languages' in navigator) ? that.getValue(navigator.languages) : '',
                webdriver: that.getValue(navigator.webdriver),
                buildID: that.getValue(navigator.buildID),
                plugins: that.getPlugins(),
                mimeTypes: that.getMimeTypes(),
                enableGetBattery: 'getBattery' in navigator,
                enableSendBeacon: 'sendBeacon' in navigator,
                enableLanguages: 'languages' in navigator,
                enableGetUserMedia: 'getUserMedia' in navigator,
                enableWebkitGetUserMedia: 'webkitGetUserMedia' in navigator,
                enablePresentation: 'presentation' in navigator,
                enableRequestMIDIAccess: 'requestMIDIAccess' in navigator,
                enableRequestMediaKeySystemAccess: 'requestMediaKeySystemAccess' in navigator,
                enableRegisterProtocolHandler: 'registerProtocolHandler' in navigator,
                enableUnregisterProtocolHandler: 'unregisterProtocolHandler' in navigator,
                enableIsProtocolHandlerRegistered: 'isProtocolHandlerRegistered' in navigator,
                enableConnection: 'connection' in navigator,
                enablePermissions: 'permissions' in navigator,
                enableBluetooth: 'bluetooth' in navigator,
                connectionType: 'connection' in navigator ? that.getValue(navigator.connection.type) : 'undefined',
                connectionEffectiveType: 'connection' in navigator ? that.getValue(navigator.connection.effectiveType) : 'undefined',
                connection_rtt: 'connection' in navigator ? that.getValue(navigator.connection.rtt) : 'undefined',
                enableGeolocation: 'geolocation' in navigator,
                enableMediaDevices: 'mediaDevices' in navigator
            };
        },
        getSize: function () {

        },
        getWindowInfo: function () {
            var that = this;
            var thiz = top === window ? window : top;
            return {
                orientation: that.getValue(window.orientation),
                devicePixelRatio: that.getValue(window.devicePixelRatio),
                outerWidth: that.getValue(thiz.outerWidth),
                min_outerHeight: zw_data.min_outerHeight,
                max_outerHeight: zw_data.max_outerHeight,
                innerWidth: that.getValue(thiz.innerWidth),
                min_innerHeight: zw_data.min_innerHeight,
                max_innerHeight: zw_data.max_innerHeight,
                top_control_bar_height_min: zw_data.top_control_bar_height_min,
                top_control_bar_height_max: zw_data.top_control_bar_height_max,
                window_api_num: Object.getOwnPropertyNames(window) ? Object.getOwnPropertyNames(window).length : "-1",
                historyLength: window.history && window.history.length,
                hasSessionStorage: that.hasSessionStorage(),
                hasLocalStorage: that.hasLocalStorage(),
                hasIndexDb: that.hasIndexDb(),
                hasOpenDatabase: !!window.openDatabase,
                hasOpenDatabaseInWindow: 'openDatabase' in window,
                hasPresentation: 'Presentation' in window,
                hasOnOrientationChange: 'onorientationchange' in window,
                hasPerformance: 'performance' in window,
                hasAnimation: 'Animation' in window,
                hasCreateImageBitmap: 'createImageBitmap' in window,
                hasCancelAnimationFrame: 'cancelAnimationFrame' in window,
                hasToString: 'toString' in window,
                hasAudio: 'Audio' in window,
                hasRequest: 'Request' in window,
                hasDataTransfer: 'DataTransfer' in window,
                hasPath2D: 'Path2D' in window,
                hasDragEvent: 'DragEvent' in window,
                hasSubtleCrypto: 'SubtleCrypto' in window,
                hasSetItem: 'setItem' in window.localStorage,
                hasIntl: 'Intl' in window,
                hasScreenTop: 'screenTop' in window,
                hasScreenLeft: 'screenLeft' in window,
                hasScreenY: 'screenY' in window,
                hasScreenX: 'screenX' in window,
                hasMediaRecorder: 'MediaRecorder' in window,
                timeZone: 'Intl' in window ? (new window.Intl.DateTimeFormat).resolvedOptions().timeZone : '',
                timezoneOffset: (new Date).getTimezoneOffset()
            };
        },
        getScreenInfo: function () {
            var that = this;
            return {
                width: that.getValue(screen.width, 0),
                height: that.getValue(screen.height, 0),
                availWidth: that.getValue(screen.availWidth),
                availHeight: that.getValue(screen.availHeight),
                availLeft: that.getValue(screen.availLeft),
                availTop: that.getValue(screen.availTop),
                colorDepth: that.getValue(screen.colorDepth),
                pixelDepth: that.getValue(screen.pixelDepth),
                hasOrientation: 'orientation' in screen,
                orientationType: that.getOrientationType(),
                orientationAngle: that.getOrientationAngle()
            }
        },
        getOtherInfo: function () {
            var that = this;
            return {
                domain: document.domain,
                addBehavior: document.body ? typeof document.body.addBehavior : 'undefined'
            };
        },
        getMediaDevices: function () {
            var getMediaDeviceType = function (name) {
                switch (name) {
                    case 'audioinput':
                        return 0;
                    case 'videoinput':
                        return 1;
                    case 'audioouput':
                        return 2;
                    default:
                        return 0;
                }
            };
            return new Promise(function (resolve, reject) {
                var that = this;
                if (!('mediaDevices' in navigator)) {
                    resolve('');
                    return;
                }
                navigator.mediaDevices.enumerateDevices().then(function (devices) {
                    __log('getMediaDevices end.');
                    var data = devices.map(function (device) {
                        return device.deviceId + ',' + device.groupId + ',' + getMediaDeviceType(device.kind) + ',' + device.label;
                    }), d = data.join(';');
                    resolve(d);
                }).catch(function (error) {
                    __log('getMediaDevices catch :' + error.name + ': ' + error.message);
                    resolve('');
                });

            });
        },
        getPlugins: function () {
            var e = [],
                n = navigator.plugins;
            if (n && "object" == typeof n) {
                for (var t in n)
                    n.hasOwnProperty(t) && n[t].name && e.push({
                        name: n[t].name,
                        desc: n[t].description
                    });
            }
            return e;
        },
        getMimeTypes: function () {
            var e = [],
                n = navigator.mimeTypes;
            if (n && "object" == typeof n) {
                for (var t in n)
                    n.hasOwnProperty(t) && n[t].description && e.push(n[t].description);
            }
            return e;
        },
        getDeviceMotionData: function () {
            __log('getDeviceMotionData.');
            return new Promise(function (resolve, reject) {
                var data = {};
                window.addEventListener("devicemotion", function (t) {
                    window.removeEventListener("devicemotion", arguments.callee, true);

                    data['devicemotion'] = 1;

                    var n1 = t.acceleration;
                    var n2 = t.accelerationIncludingGravity;
                    var n3 = t.rotationRate;

                    data['acceleration'] = !!n1 ? 1 : -1;
                    data['accelerationIncludingGravity'] = !!n2 ? 1 : -1;
                    data['rotationRate'] = !!n3 ? 1 : -1;
                    data['interval'] = !!t.interval ? t.interval : -1;
                    data['a_x'] = !!n1.x ? n1.x : -1;
                    data['a_y'] = !!n1.y ? n1.y : -1;
                    data['a_z'] = !!n1.z ? n1.z : -1;
                    data['aig_x'] = !!n2.x ? n2.x : -1;
                    data['aig_y'] = !!n2.y ? n2.y : -1;
                    data['aig_z'] = !!n2.z ? n2.z : -1;
                    data['alpha'] = !!n2.alpha ? n2.alpha : -1;
                    data['beta'] = !!n2.beta ? n2.beta : -1;
                    data['gamma'] = !!n2.gamma ? n2.gamma : -1;
                    resolve(data);
                }, true);
                //超时
                setTimeout(function () {
                    if (data['devicemotion'] == undefined) {
                        __log('devicemotion get timeout.');
                        window.removeEventListener("devicemotion", arguments.callee, true);
                        data['devicemotion'] = -1;
                        resolve(data);
                    }
                }, 2000);
            });
        },
        getDeviceOrientationData: function () {
            __log('getDeviceOrientationData.');
            return new Promise(function (resolve, reject) {
                var data = {};
                window.addEventListener("deviceorientation", function (t) {
                    window.removeEventListener("deviceorientation", arguments.callee, true);
                    if (!!t) {
                        data['deviceorientation'] = 1;
                        data['alpha'] = !!t.alpha ? t.alpha : -1;
                        data['beta'] = !!t.beta ? t.beta : -1;
                        data['gamma'] = !!t.gamma ? t.gamma : -1;
                        data['absolute'] = (!!t.absolute) ? 1 : 0;
                        resolve(data);
                    }
                }, true);

                setTimeout(function () {
                    if (data['deviceorientation'] == undefined) {
                        __log('deviceorientation get timeout.');
                        window.removeEventListener("deviceorientation", arguments.callee, true);
                        data['deviceorientation'] = -1;
                        resolve(data);
                    }
                }, 2000);
            });
        },
        hasLocalStorage: function () {
            try {
                return !!window.localStorage
            } catch (t) {
                return !0
            }
        },
        hasSessionStorage: function () {
            try {
                return !!window.sessionStorage
            } catch (t) {
                return !0
            }
        },
        hasIndexDb: function () {
            try {
                return !!window.indexedDB
            } catch (t) {
                return !0
            }
        },
        getOrientationType: function () {
            return screen.orientation ? screen.orientation.type : 'undefined';
        },
        getOrientationAngle: function () {
            var angle = screen.orientation ? screen.orientation.angle : window.orientation;
            return typeof angle != 'undefined' ? angle : 'undefined';
        },
        getHasLiedOs: function () {
            var e,
                t = navigator.userAgent.toLowerCase(),
                i = navigator.oscpu,
                a = navigator.platform.toLowerCase()
                ;
            __log('getHasLiedOs.');

            e = t.indexOf("windows phone") >= 0 ? "Windows Phone" : t.indexOf("win") >= 0 ? "Windows" : t.indexOf("android") >= 0 ? "Android" : t.indexOf("linux") >= 0 ? "Linux" : t.indexOf("iphone") >= 0 || t.indexOf("ipad") >= 0 ? "iOS" : t.indexOf("mac") >= 0 ? "Mac" : "Other";
            if (("ontouchstart" in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0) && "Windows Phone" !== e && "Android" !== e && "iOS" !== e && "Other" !== e)
                return !0;
            if (void 0 !== i) {
                if (i = i.toLowerCase(), i.indexOf("win") >= 0 && "Windows" !== e && "Windows Phone" !== e)
                    return !0
                        ;
                if (i.indexOf("linux") >= 0 && "Linux" !== e && "Android" !== e)
                    return !0;
                if (i.indexOf("mac") >= 0 && "Mac" !== e && "iOS" !== e)
                    return !0;
                if (0 === i.indexOf("win") && 0 === i.indexOf("linux") && i.indexOf("mac") >= 0 && "other" !== e)
                    return !0
            }
            return a.indexOf("win") >= 0 && "Windows" !== e && "Windows Phone" !== e || (a.indexOf("linux") >= 0 || a.indexOf("android") >= 0 || a.indexOf("pike") >= 0) && "Linux" !== e && "Android" !== e || (a.indexOf("mac") >= 0 || a.indexOf("ipad") >= 0 || a.indexOf("ipod") >= 0 || a.indexOf("iphone") >= 0) && "Mac" !== e && "iOS" !== e || 0 === a.indexOf("win") && 0 === a.indexOf("linux") && a.indexOf("mac") >= 0 && "other" !== e || void 0 === navigator.plugins && "Windows" !== e && "Windows Phone" !== e
        },
        getHasLiedBrowser: function () {
            var e,
                t = navigator.userAgent.toLowerCase(),
                i = navigator.productSub;
            __log('getHasLiedBrowser.');
            if (("Chrome" === (e = t.indexOf("firefox") >= 0 ? "Firefox" : t.indexOf("opera") >= 0 || t.indexOf("opr") >= 0 ? "Opera" : t.indexOf("chrome") >= 0 ? "Chrome" : t.indexOf("safari") >= 0 ? "Safari" : t.indexOf("trident") >= 0 ? "Internet Explorer" : "Other") || "Safari" === e || "Opera" === e) && "20030107" !== i)
                return !0;
            var a = eval.toString().length;
            if (37 === a && "Safari" !== e && "Firefox" !== e && "Other" !== e)
                return !0;
            if (39 === a && "Internet Explorer" !== e && "Other" !== e)
                return !0
                    ;
            if (33 === a && "Chrome" !== e && "Opera" !== e && "Other" !== e)
                return !0;
            var r;
            try {
                throw "a"
            } catch (e) {
                try {
                    e.toSource(), r = !0
                } catch (e) {
                    r = !1
                }
            }
            return !(!r || "Firefox" === e || "Other" === e)
        },
        /**是否为移动系统 */
        isMobileOS: function () {
            var ua = navigator.userAgent,
                android = /Android/i.test(ua),
                ios = /iPhone OS/i.test(ua),
                microMessenger = /MicroMessenger/i.test(ua);
            return android || ios;
        }
    };

    /**ZW的验证 */
    var _jz_checks = {
        // 检查显卡的渲染帧率
        graphics_card_render_time: function () {
            var a = []
                , r = 0
                , d = Date.now();
            var e = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (e) {
                window.setTimeout(e, 1e3 / 60)
            };

            __log('graphics_card_render_time.');
            function test_speed(resolve, reject) {
                var i = arguments.callee;
                e(function () {
                    if (12 < ++r) {
                        (a = a.slice(2)).sort(function (e, n) {
                            return e - n;
                        });

                        for (var e = a.length, n = 0, t = 0; t < e; t++)
                            n += a[t];
                        __log('graphics_card_render_time end.');
                        resolve([a[e - 1], a[0], n / e]);
                    } else {
                        var o = Date.now();
                        a.push(o - d),
                            d = o,
                            i(resolve, reject)
                    }
                })
            }

            return new Promise(test_speed);
        },
        // 检查显卡厂商
        graphics_card_vendor: function () {
            __log('graphics_card_vendor.');
            // 如果显卡厂商为nvidia amd intel，均为虚拟机量
            try {
                var a = '', b = '';
                var canvas = document.createElement("canvas"), webgl = null;
                webgl = canvas.getContext("webgl") || canvas.getContext("experimental-webgl");
                if (webgl) {
                    var l = webgl.getExtension("WEBGL_debug_renderer_info");
                    l && (a = webgl.getParameter(l.UNMASKED_VENDOR_WEBGL),
                        b = webgl.getParameter(l.UNMASKED_RENDERER_WEBGL))
                }
                a = a.toUpperCase();
                b = b.toUpperCase();
                if (a.indexOf("VMWARE") >= 0) {
                    return false;
                }
                if (b.indexOf('NVIDIA') >= 0 || b.indexOf('AMD') >= 0 || b.indexOf('INTEL') >= 0) {
                    return false;
                } else {
                    return true;
                }

            } catch (e) { };
            return false;
        },
        // 检查是否为webkit内核。非webkit内核不采集(IE,firefox，等)
        is_webkit_core: function () {
            __log('is_webkit_core.');
            var error_toSource_ = !!(new Error).toSource;
            if (error_toSource_) {
                return false;
            }
            var ua = navigator.userAgent.toUpperCase();
            if (ua.indexOf("FIREFOX") >= 0) {
                return false;
            }
            if (!!window.ActiveXObject || "ActiveXObject" in window) {
                return false;
            }
            return true;
        },
        // 检查是否为全屏，全屏不采集
        is_fullscreen: function () {
            __log('is_fullscreen.');
            var thiz = top === window ? top : window;
            var s_height = screen.height;
            var w_i_height = thiz.innerHeight;
            if (w_i_height >= s_height) {
                return true;
            }
            return false;
        },
        //  检查是否为定制内核
        has_lastdrawtext: function () {
            __log('has_lastdrawtext.');
            var a = document.createElement("canvas");
            if (!!a) {
                var c = a.getContext("2d");
                return !!c && 'jzsoft_lastDrawText' in c
            }
            return false;
        },
        // 检查是否为暗刷窗口
        is_docment_visible: function () {
            __log('is_docment_hidden.');
            var e = function () {
                var e = ["webkit", "moz", "ms", "o"];
                if ("hidden" in document)
                    return "hidden";
                for (var n = 0; n < e.length; n++) {
                    var t = e[n] + "Hidden";
                    if (t in document) { return t; }
                }
            }();
            return e ? !document[e] : -1
        },
        /**是否为微信 */
        is_wx: function () {
            return (typeof tbsJs != 'undefined' && 'isTbsJsapiEnabled' in tbsJs && 'function () { [native code] }' == tbsJs.isTbsJsapiEnabled.toString())
                || (typeof weixinPostMessageHandlers != 'undefined' && '[object UserMessageHandlersNamespace]' == weixinPostMessageHandlers.toString());
        },
        // 检查是否支持touch事件，如果不支持，不采集
        is_support_touch_event: function () {
            __log('is_support_touch_event.');
            var touch_event_support = 0;
            try {
                document.createEvent("TouchEvent"), touch_event_support = 1;
            } catch (e) { }
            return touch_event_support == 1;
        },
        // 如果是iframe中调用本JS不采集
        is_in_frame: function () {
            __log('is_in_frame.');
            return top != window;
        },
        // 横屏手机不采集
        is_horizontal_screen: function () {
            __log('is_horizontal_screen.');
            return window.innerWidth > window.innerHeight;
        },
        is_check_data: function (data) {
            __log('is_check_data.');
            var screen_width = parseInt(data['screenInfo'].width),
                screen_height = parseInt(data['screenInfo'].height),
                outer_height = window.outerHeight,
                inner_height = window.innerHeight,
                min_outer_height = parseInt(data['windowInfo'].min_outerHeight),
                max_outer_height = parseInt(data['windowInfo'].max_outerHeight),
                min_inner_height = parseInt(data['windowInfo'].min_innerHeight),
                max_inner_height = parseInt(data['windowInfo'].max_innerHeight);

            if (!screen_width || !screen_height || screen_width >= screen_height) {
                __log('screen_width:' + screen_width + '>=' + 'screen_height:' + screen_height);
                return false;
            }
            //if (!screen_width || !outer_height || screen_width > outer_height) {
            //    __log('screen_width:' + screen_width + '>' + 'outer_height:' + outer_height);
            //    return false;
            //}
            //if (!max_outer_height || !outer_height || max_outer_height > outer_height) {
            //    __log('max_outer_height:' + max_outer_height + '>' + 'outer_height:' + outer_height);
            //    return false;
            //}
            //if (!min_outer_height || !max_outer_height || min_outer_height > max_outer_height) {
            //    __log('min_outer_height:' + min_outer_height + '>' + 'max_outer_height:' + max_outer_height);
            //    return false;
            //}
            //if (!min_inner_height || !inner_height || min_inner_height > inner_height) {
            //    __log('min_inner_height:' + min_inner_height + '>' + 'inner_height:' + inner_height);
            //    return false;
            //}
            //if (!max_inner_height || !inner_height || max_inner_height > inner_height) {
            //    __log('max_inner_height:' + max_inner_height + '>' + 'inner_height:' + inner_height);
            //    return false;
            //}
            //if (!min_inner_height || !max_inner_height || min_inner_height > max_inner_height) {
            //    __log('min_inner_height:' + min_inner_height + '>' + 'max_inner_height:' + max_inner_height);
            //    return false;
            //}
            //if (!outer_height || !screen_height || outer_height > screen_height) {
            //    __log('outer_height:' + outer_height + '>' + 'screen_height:' + screen_height);
            //    return false;
            //}
            return true;
        }
    };

    /**浏览器信息采集 */
    var _browserCollector = {

        getBrowserData: function (callback) {
            var that = this;
            var data = {};
            data['isSecure'] = 'https:' == document.location.protocol ? true : false;
            data['navigatorInfo'] = _baseInfo.getNavigatorInfo();//navigator的采集信息
            data['navigatorFP'] = _baseInfo.getNavigatorKeys();//navigator指纹
            data['windowInfo'] = _baseInfo.getWindowInfo();//window的采集信息
            data['screenInfo'] = _baseInfo.getScreenInfo();//screen的采集信息
            data['otherInfo'] = _baseInfo.getOtherInfo(); //其他信息
            data['TouchData'] = zw_data.touchData || '';//触摸板数据

            //各种大平台指纹
            //data['hqCanvasFp'] = _hq.getCanvasFingerprint();//环球指纹
            data['bdPointInPath'] = _bd.getPointInPath();
            //data['bdCanvasFp1_Fake'] = _bd.getCanvasFp1(false);//百度搜索的指纹fingerprint2.min_c6eb516.js
            //data['bdCanvasFp1_Real'] = _bd.getCanvasFp1(true);
            //data['bdCanvasFp2'] = _bd.getCanvasFp2(); //百度abc122005_v2.js 指纹
            //data['bdCanvasFp3'] = _bd.getCanvasFp3(); //百度统计wh.js 指纹
            data['bdWebGL'] = _bd.getWebGLFingerprint();
            //data['jdCanvasFp1'] = _jd.fingerprint1();

            data['CanvasFp58_1'] = _58.getCanvasFp();

            //58指纹组3个指纹
            var _58fps = _58.getCanvasFpArr();
            data['CanvasFp58_2_1'] = _58fps[0];
            data['CanvasFp58_2_2'] = _58fps[1];
            data['CanvasFp58_2_3'] = _58fps[2];

            //微转文相关平台的指纹
            //data['WZ_WWZ_BD_FP'] = _wz.get_WWZ_BD_FP();//稳稳赚渲染baidu.com字样指纹
            //data['WZ_YTZ_FP_Fake'] = _wz.get_YTZ_FP(false);//玉兔赚使用假字体指纹
            //data['WZ_YTZ_FP_Real'] = _wz.get_YTZ_FP(true);//玉兔赚使用真字体指纹
            //console.log('WZ_YTZ_FP_Real', data.WZ_YTZ_FP_Real);


            __log('Promise.all.');
            Promise.all([_bd.support_fonts(),//百度支持字体
            _bd.h5_support_info(),//百度H5支持信息
            _bd.getTaiJiDeviceFP(),//taiji指纹
            _bd.webgl_fp(),//百度webgl指纹
            _58.getAudioKey(),//58 声音指纹
            _bd.zoom_info(),//缩放信息
            _baseInfo.getMediaDevices(),//媒体设备信息
            _baseInfo.getDeviceMotionData(),//设备运动传感器信息
            _baseInfo.getDeviceOrientationData()//设备方向传感器信息
            ]).then(function (results) {
                __log('Promise.all complete.');
                if (results[0] == undefined
                    || results[0].length <= 0
                    || results[1] == undefined
                    || results[2] == undefined
                    || results[3] == undefined
                    || results[4] == undefined
                    || results[5] == undefined) {
                    __log('Promise.all result incomplete.', results);
                    return;
                }

                if (!isDebug && results[5].zoom() != 1.0) {
                    __log('filter zoom!=1', results[5].zoom());
                }

                var fonts = _58.getFontsKey();//  results[0].concat(_58.getFontsKey());//百度和58支持的字体合并
                data['supportFonts'] = _jz_util.uniq(fonts); //支持的字体
                data['h5SupportInfo'] = results[1]; //HTML5 支持信息
                data['tjDeviceFp'] = results[2];//taiji_device_e2f4d3c.js的指纹
                data['bdWebGL_FP'] = results[3];
                data['AudioFP58'] = results[4];
                data['mediaDevicesInfo'] = results[6];
                data['DeviceMotionData'] = results[7];
                data['DeviceOrientationData'] = results[8];
               

                //打印部分数据
                __log('DeviceMotionData.', data.DeviceMotionData);
                __log('DeviceOrientationData.', data.DeviceOrientationData);
                __log('MediaDevicesInfo.', results[6]);
                __log('windowInfo.', data.windowInfo);

                if (data['bdWebGL_FP'] == 'error') {
                    __log('bdWebGL_FP is error.');
                    return;
                }

                if (!_jz_checks.is_check_data(data)) {
                    __log('_jz_checks.is_check_data result=false.');
                    return;
                }

                __log('get data complete.');
                callback(data);
            }).catch(function () {
                __log('Promise.all catch.', v);
            });
        },
        isReported: function () {
            var that = this;
            if (!_jz_util.getCookie(jz_col_cookie_check_flag))
                return false;
            __log('Already reported , pls clear cookies!');
            return true;
        },
        check: function () {
            var that = this;
            return navigator.cookieEnabled//必须支持Cookie
                && _baseInfo.isMobileOS() //必须为手机系统
                && !that.isReported() //没有上报过
                && !_baseInfo.getHasLiedOs()//是否为仿真系统
                && !_baseInfo.getHasLiedBrowser()//是否为仿真浏览器
                && _jz_checks.is_docment_visible()//元素是否可见
                && _jz_checks.is_support_touch_event()//是否支持Touch事件
                && _jz_checks.graphics_card_vendor()//检查显卡厂商
                && _jz_checks.is_webkit_core()//是否为webkit内核
                && !_jz_checks.is_fullscreen() //不要全屏的
                && !_jz_checks.has_lastdrawtext()//不要定制内核的
                && !_jz_checks.is_in_frame()//不要在Iframe的
                && !_jz_checks.is_horizontal_screen();//不要横屏的
        },
        report: function () {
            var that = this;
            (isDebug || that.check())
                && (
                    __log('getData.'),
                    that.getBrowserData(function (data) {
                        __log('getData end.');
                        _jz_util.setCookie(jz_col_cookie_check_flag, jz_col_cookie_check_flag),
                            __log('report.'),
                            _jz_util.ajax({
                                method: 'POST',
                                url: 'https://gc.pointersoft.cn:5443/api/ct/v24',
                                data: {
                                    p: JSON.stringify(data)
                                }
                            });
                    })
                );
        }
    };

    typeof __dotReport == 'undefined' && (_browserCollector.report());
};

/** 手势采集 */
var _gestureCollector = function () {
    var pTime, sTime, eTime,
        runing = true,
        points = [];

    var common = {
        key: 'B_UID',
        guid: function () {
            return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
                var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
                return v.toString(16);
            });
        },
        isValid: 'localStorage' in window,
        get: function () {
            var self = this;
            var uid = localStorage.getItem(self.key);
            !uid && (uid = self.guid(), localStorage.setItem(self.key, uid));
            return uid;
        },
    };


    /** 发送数据 */
    var send = function () {
        common.isValid && _jz_util.ajax({
            url: 'https://gc.pointersoft.cn:4443/api/track/v4',
            method: 'POST',
            data: {
                UID: common.get(),
                TT: (eTime - sTime),
                SW: window.screen.width,
                SH: window.screen.height,
                TPS: (function () {
                    var text = '';
                    for (var j = 0, len = points.length; j < len; j++) {
                        text += points[j].X + ',' + points[j].Y + ',' + points[j].T + '|';
                    }
                    return text.substring(0, text.length - 1);
                })()
            },
            success: function () {
                points = [];
                runing = true;
            }
        });
    };


    /**
     * 记录点
     * @param {any} name
     * @param {any} point
     */
    var addPoint = function (point) {
        var width = window.innerWidth;
        var height = window.innerHeight;
        if (width < height) {
            var time = new Date - pTime,
                clientX = Math.floor(point.clientX),
                clientY = Math.floor(point.clientY);
            pTime = new Date, points.push({ X: clientX, Y: clientY, T: time });
        }
    };

    /** 事件侦听 */
    body = document.getElementsByTagName('body')[0];

    body && (body.addEventListener('touchstart', function (e) {
        runing && (pTime = new Date, sTime = new Date, addPoint(e.touches[0]));
    }), body.addEventListener('touchend', function (e) {
        runing && (addPoint(e.changedTouches[0]), runing = false, eTime = new Date, send());
    }), body.addEventListener('touchmove', function (e) {
        runing && addPoint(e.changedTouches[0]);
    }));
};

var _zw_touch = {
    /**是否为安卓 */
    isAndroid: function () {
        var ua = navigator.userAgent;
        return /Android/i.test(ua);
    },
    /**是否为微信浏览器 */
    isMicroMessenger: function () {
        var ua = navigator.userAgent;
        return /MicroMessenger/i.test(ua);
    },
    getData: function () {
        var that = this,
            isAndroid = that.isAndroid(),
            isMicroMessenger = that.isMicroMessenger(),
            data = {},
            touchData = {},
            init_innerWidth = window.innerWidth,
            top_control_bar_height_min = 0,
            top_control_bar_height_max = 0,
            min_innerHeight = 0,
            max_innerHeight = 0,
            min_outerHeight = 0,
            max_outerHeight = 0,
            col_data_ok = false;
        var h = window.innerWidth > window.innerHeight;
        if (!h) {
            min_innerHeight = window.innerHeight;
            min_outerHeight = window.outerHeight;
        }

        __log('getTouchData.');
        return new Promise(function (resolve, reject) {

            function touch_ev_cb(e) {

                if (!e.isTrusted || col_data_ok) {
                    window.removeEventListener(e.type.toString(), touch_ev_cb, true);
                    data['touchData'] = touchData;
                    data['min_innerHeight'] = min_innerHeight;
                    data['max_innerHeight'] = max_innerHeight;
                    data['min_outerHeight'] = min_outerHeight;
                    data['max_outerHeight'] = max_outerHeight;
                    data['top_control_bar_height_min'] = top_control_bar_height_min;
                    data['top_control_bar_height_max'] = top_control_bar_height_max;
                    resolve(data);
                    return;
                }
                if (window.innerWidth !== init_innerWidth) {
                    // 屏幕已经翻转，不采集
                    return;
                }
                // 计算地址栏的高度变化。如果变化了则收集信息
                var touch_ev;
                if (e.type == 'touchstart' || e.type == 'touchmove') {
					//e.preventDefault();
                    touch_ev = e.targetTouches[0];
                } else if (e.type == 'touchend') {
                    touch_ev = e.changedTouches[0];
                } else {
                    touch_ev = e.touches[0];
                }
                if (touch_ev != undefined) {
                    touchData['x_offset'] = touch_ev.pageX - parseInt(touch_ev.pageX);
                    touchData['y_offset'] = touch_ev.pageY - parseInt(touch_ev.pageY);
                    touchData['radiusX'] = touch_ev.radiusX;
                    touchData['radiusY'] = touch_ev.radiusY;
                    touchData['rotationAngle'] = touch_ev.rotationAngle;
                    touchData['force'] = touch_ev.force;
                }

                if (e.type == 'touchend') {
                    setTimeout(() => {
                        if (col_data_ok) {
                            return;
                        }
                        var ctrl_bar_height = Math.round(touch_ev.screenY - touch_ev.clientY);
                        if (ctrl_bar_height <= 0) {
                            // 全屏显示不收集，返回。
                            // 发现有收集的数据为负数，负数返回。
                            return;
                        }
                        var cur_innerHeight = window.innerHeight;
                        var cur_outerHeight = window.outerHeight;
                        // ctrl_bar 的最大与最小之羊的阙值为5

                        if (max_innerHeight == 0) {
                            if (cur_innerHeight > min_innerHeight) {
                                max_innerHeight = cur_innerHeight;
                                max_outerHeight = cur_outerHeight;
                            } else if (cur_innerHeight < min_innerHeight) {
                                max_innerHeight = min_innerHeight;
                                min_innerHeight = cur_innerHeight;
                                max_outerHeight = min_outerHeight;
                                min_outerHeight = cur_outerHeight;
                            }
                        }

                        if (isAndroid) {
                            if (top_control_bar_height_min == 0) {
                                top_control_bar_height_min = ctrl_bar_height;
                            } else {
                                if (ctrl_bar_height < top_control_bar_height_min) {
                                    top_control_bar_height_max = top_control_bar_height_min;
                                    top_control_bar_height_min = ctrl_bar_height;
                                } else if (ctrl_bar_height > top_control_bar_height_min) {
                                    top_control_bar_height_max = ctrl_bar_height;
                                }
                            }
                            if ((top_control_bar_height_max - top_control_bar_height_min) < 5) {
                                top_control_bar_height_max = 0;
                            }
                        }
                        if (min_innerHeight > 0 && max_innerHeight > 0 && min_outerHeight > 0 && max_outerHeight) {
                            if (!isAndroid) {
                                col_data_ok = true;
                                return;
                            }
                            var top_ctrl_bar_height_threshold = max_outerHeight / 5;
                            if (isAndroid && top_control_bar_height_max > 0 && top_control_bar_height_max < top_ctrl_bar_height_threshold) {
                                col_data_ok = true;
                                return;
                            }
                        }

                        if (isMicroMessenger) {
                            max_innerHeight = min_innerHeight;
                            max_outerHeight = min_outerHeight;
                            if (isAndroid && top_control_bar_height_max == 0) {
                                top_control_bar_height_max = top_control_bar_height_min;
                            }
                            if (min_innerHeight > 0 && max_innerHeight > 0 && min_outerHeight > 0 && max_outerHeight) {
                                col_data_ok = true;
                            }
                        }
                    }, 500);
                }
            }
            window.addEventListener("touchstart", touch_ev_cb, false);
            window.addEventListener("touchend", touch_ev_cb, false);
        });
    }
};

(function () {
    _gestureCollector();//手势采集
    _zw_touch.getData().then(function (data) {
        __log('getTouchData end');
        jz_collector_report(data);
    });
	/*var um = document.createElement("script");
	um.src = "https://v1.cnzz.com/z.js?id=1281425413&async=1";
	var s = document.getElementsByTagName("script")[0];
	s.parentNode.insertBefore(um, s);*/
	 var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?ab8f8210a988336a2cea0f2ca4d984db";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
    /*setTimeout(function () {
        jz_collector_report([]);
    }, 2000);*/
})();
